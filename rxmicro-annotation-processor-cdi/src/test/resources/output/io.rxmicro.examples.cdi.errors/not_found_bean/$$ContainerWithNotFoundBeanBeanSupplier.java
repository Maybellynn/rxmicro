package io.rxmicro.examples.cdi.errors.not_found_bean;

import io.rxmicro.cdi.detail.BeanSupplier;
import io.rxmicro.cdi.detail.ByTypeAndNameInstanceQualifier;
import io.rxmicro.runtime.detail.ByTypeInstanceQualifier;

import static io.rxmicro.cdi.detail.InternalBeanFactory.getRequiredBean;
import static rxmicro.$$Reflections.setFieldValue;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$ContainerWithNotFoundBeanBeanSupplier extends BeanSupplier<ContainerWithNotFoundBean> {

    @Override
    public ContainerWithNotFoundBean get() {
        final ContainerWithNotFoundBean bean = new ContainerWithNotFoundBean();
        setFieldValue(bean, "child", getRequiredBean(
                bean,
                "child",
                new ByTypeAndNameInstanceQualifier<>(Child.class, "child"),
                new ByTypeInstanceQualifier<>(Child.class)
        ));
        return bean;
    }
}
