package io.rxmicro.examples.cdi.optional.injection;

import io.rxmicro.cdi.detail.BeanSupplier;
import io.rxmicro.cdi.detail.ByTypeAndNameInstanceQualifier;
import io.rxmicro.runtime.detail.ByTypeInstanceQualifier;

import static io.rxmicro.cdi.detail.InternalBeanFactory.getOptionalBean;

/**
 * Generated by rxmicro annotation processor
 *
 * @link https://rxmicro.io
 */
public final class $$BusinessServiceFacadeBeanSupplier extends BeanSupplier<BusinessServiceFacade> {

    @Override
    public BusinessServiceFacade get() {
        final BusinessServiceFacade bean = new BusinessServiceFacade();
        getOptionalBean(
                bean,
                "productionBusinessService",
                new ByTypeAndNameInstanceQualifier<>(BusinessService.class, "productionBusinessService"),
                new ByTypeInstanceQualifier<>(BusinessService.class)
        ).ifPresent(value -> bean.productionBusinessService = value);
        getOptionalBean(
                bean,
                "developmentBusinessService",
                new ByTypeAndNameInstanceQualifier<>(BusinessService.class, "developmentBusinessService"),
                new ByTypeInstanceQualifier<>(BusinessService.class)
        ).ifPresent(value -> bean.developmentBusinessService = value);
        bean.postConstruct();
        return bean;
    }
}
