package io.rxmicro.examples.cdi.resource.injection.constructor;

import io.rxmicro.cdi.detail.BeanSupplier;
import io.rxmicro.cdi.resource.ClasspathJsonArrayResourceConverter;
import io.rxmicro.cdi.resource.ClasspathJsonObjectResourceConverter;
import io.rxmicro.cdi.resource.ClasspathPropertiesResourceConverter;

import java.util.List;
import java.util.Map;

import static io.rxmicro.cdi.detail.ResourceLoaderFactory.loadResource;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$ResourceInjectionUsingConstructorBeanSupplier extends BeanSupplier<ResourceInjectionUsingConstructor> {

    @Override
    public ResourceInjectionUsingConstructor get() {
        final Builder builder = new Builder();
        builder.jsonObject = loadResource("classpath:object.json", ClasspathJsonObjectResourceConverter.class);
        builder.jsonArray = loadResource("classpath:array.json", ClasspathJsonArrayResourceConverter.class);
        builder.properties = loadResource("classpath:value.properties", ClasspathPropertiesResourceConverter.class);
        return builder.build();
    }

    private static final class Builder {

        private Map<String, Object> jsonObject;

        private List<Object> jsonArray;

        private Map<String, String> properties;

        private ResourceInjectionUsingConstructor build() {
            return new ResourceInjectionUsingConstructor(jsonObject, jsonArray, properties);
        }
    }
}
