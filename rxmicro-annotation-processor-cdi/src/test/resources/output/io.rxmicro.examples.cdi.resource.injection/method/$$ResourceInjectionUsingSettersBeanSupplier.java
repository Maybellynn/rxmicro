package io.rxmicro.examples.cdi.resource.injection.method;

import io.rxmicro.cdi.detail.BeanSupplier;
import io.rxmicro.cdi.resource.ClasspathJsonArrayResourceConverter;
import io.rxmicro.cdi.resource.ClasspathJsonObjectResourceConverter;
import io.rxmicro.cdi.resource.ClasspathPropertiesResourceConverter;

import static io.rxmicro.cdi.detail.ResourceLoaderFactory.loadResource;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$ResourceInjectionUsingSettersBeanSupplier extends BeanSupplier<ResourceInjectionUsingSetters> {

    @Override
    public ResourceInjectionUsingSetters get() {
        final ResourceInjectionUsingSetters bean = new ResourceInjectionUsingSetters();
        bean.setJsonObject(loadResource("classpath:object.json", ClasspathJsonObjectResourceConverter.class));
        bean.setJsonArray(loadResource("classpath:array.json", ClasspathJsonArrayResourceConverter.class));
        bean.setProperties(loadResource("classpath:value.properties", ClasspathPropertiesResourceConverter.class));
        return bean;
    }
}
