package io.rxmicro.examples.cdi.resource.injection.reflection;

import io.rxmicro.cdi.detail.BeanSupplier;
import io.rxmicro.cdi.resource.ClasspathJsonArrayResourceConverter;
import io.rxmicro.cdi.resource.ClasspathJsonObjectResourceConverter;
import io.rxmicro.cdi.resource.ClasspathPropertiesResourceConverter;

import static io.rxmicro.cdi.detail.ResourceLoaderFactory.loadResource;
import static rxmicro.$$Reflections.setFieldValue;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$ResourceInjectionUsingReflectionBeanSupplier extends BeanSupplier<ResourceInjectionUsingReflection> {

    @Override
    public ResourceInjectionUsingReflection get() {
        final ResourceInjectionUsingReflection bean = new ResourceInjectionUsingReflection();
        setFieldValue(bean, "jsonObject", loadResource("classpath:object.json", ClasspathJsonObjectResourceConverter.class));
        setFieldValue(bean, "jsonArray", loadResource("classpath:array.json", ClasspathJsonArrayResourceConverter.class));
        setFieldValue(bean, "properties", loadResource("classpath:value.properties", ClasspathPropertiesResourceConverter.class));
        return bean;
    }
}
