# http:..maven.apache.org.plugins.maven-pmd-plugin.examples.violation-exclusions.html
#
# --------------------------------------------- rxmicro-common -----------------------------------------------------------------------------
##### SystemPrintln is used during unit testing
io.rxmicro.common.local.TestLoggers=SystemPrintln

##### This class contains utility methods
io.rxmicro.common.util.ExCollections=UseObjectForClearerAPI,ExcessiveParameterList

##### Redundant parentheses improves readability of complex logic expression: a || (b & c) || (d && e)
io.rxmicro.common.util.Strings=UselessParentheses

# --------------------------------------------- rxmicro-runtime ----------------------------------------------------------------------------
##### Thread is used as Shutdown hook
##### InstanceContainer is top level class, which must catch ALL possible types of exceptions
io.rxmicro.runtime.local.InstanceContainer=DoNotUseThreads,AvoidCatchingThrowable

# --------------------------------------------- rxmicro-logger -----------------------------------------------------------------------------
##### System err used as top level logger if internal error occurred
##### LoggerFactory is top level class, which must catch ALL possible types of exceptions and log it
io.rxmicro.logger.LoggerFactory=SystemPrintln,AvoidCatchingThrowable,AvoidPrintStackTrace

##### This is logger
io.rxmicro.logger.Logger=ExcessivePublicCount,TooManyMethods

##### This is logger
io.rxmicro.logger.impl.AbstractLogger=ExcessivePublicCount,TooManyMethods,ExcessiveClassLength

# --------------------------------------------- rxmicro-http -------------------------------------------------------------------------------
##### This class contains utility methods
io.rxmicro.http.HttpHeaders=UseObjectForClearerAPI,ExcessiveParameterList

##### This class contains utility methods
io.rxmicro.http.QueryParams=UseObjectForClearerAPI,ExcessiveParameterList

# --------------------------------------------- rxmicro-rest -------------------------------------------------------------------------------
##### Direct array access increases a performance
io.rxmicro.rest.model.HttpCallFailedException=ArrayIsStoredDirectly,MethodReturnsInternalArray

# --------------------------------------------- rxmicro-rest-server ------------------------------------------------------------------------
##### This is default value
io.rxmicro.rest.server.HttpServerConfig=AvoidUsingHardCodedIP

##### For improvements the readability of default values
io.rxmicro.rest.server.RestServerConfig=RedundantFieldInitializer

##### This is template signature,i.e. method that handles a request must be:
########## CompletionStage<HttpResponse> ${NAME}(PathVariableMapping, HttpRequest)
io.rxmicro.rest.server.detail.component.BadHttpRequestRestController=UnusedFormalParameter

##### This is template signature,i.e. method that handles a request must be:
########## CompletionStage<HttpResponse> ${NAME}(PathVariableMapping, HttpRequest)
io.rxmicro.rest.server.detail.component.CrossOriginResourceSharingPreflightRestController=UnusedFormalParameter

##### This is template signature,i.e. method that handles a request must be:
########## CompletionStage<HttpResponse> ${NAME}(PathVariableMapping, HttpRequest)
io.rxmicro.rest.server.detail.component.HttpHealthCheckRestController=UnusedFormalParameter

##### BaseRestControllerMethod is top level class, which must catch ALL possible types of exceptions and log it
io.rxmicro.rest.server.internal.BaseRestControllerMethod=AvoidCatchingThrowable

# --------------------------------------------- rxmicro-rest-server-netty ------------------------------------------------------------------
##### NettyRequestHandler is top level class, which must catch ALL possible types of exceptions and log it
io.rxmicro.rest.server.netty.internal.component.NettyRequestHandler=AvoidCatchingThrowable

##### Direct array access increases a performance
io.rxmicro.rest.server.netty.internal.model.NettyHttpResponse=ArrayIsStoredDirectly,MethodReturnsInternalArray

# --------------------------------------------- rxmicro-json -------------------------------------------------------------------------------
##### This is short-lived object
io.rxmicro.json.internal.writer.JsonToStringBuilder=AvoidStringBufferField

##### Redundant parentheses improves readability of complex logic expression: a || (b & c) || (d && e)
io.rxmicro.json.JsonNumber=UselessParentheses

# --------------------------------------------- rxmicro-exchange-json ----------------------------------------------------------------------
##### This is utility class that used by generated converters
io.rxmicro.exchange.json.detail.ModelFromJsonConverter=TooManyMethods

# --------------------------------------------- rxmicro-data-mono --------------------------------------------------------------------------
##### This is utility class that used by generated converters
io.rxmicro.data.mongo.internal.AbstractEntityMongoDBConverter=TooManyMethods

# --------------------------------------------- rxmicro-data-sql ---------------------------------------------------------------------------
##### setIsolationLevel returns reactive type
io.rxmicro.data.sql.model.completablefuture.Transaction=LinguisticNaming
io.rxmicro.data.sql.model.reactor.Transaction=LinguisticNaming
io.rxmicro.data.sql.model.rxjava3.Transaction=LinguisticNaming

# --------------------------------------------- rxmicro-data-sql-r2dbc ---------------------------------------------------------------------
##### It seems that UnnecessaryFullyQualifiedName check contains bug: https://github.com.pmd.pmd.issues.1790
io.rxmicro.data.sql.r2dbc.internal.AbstractTransaction=UnnecessaryFullyQualifiedName

# --------------------------------------------- rxmicro-data-sql-r2dbc-postgresql ----------------------------------------------------------
##### Connection pool closed at shutdown hook. See PostgreSQLConnectionPoolBuilder.R2DBCPostgreSQLConnectionPool
io.rxmicro.data.sql.r2dbc.postgresql.detail.PostgreSQLRepositoryFactory=CloseResource

# --------------------------------------------- rxmicro-test ------------------------------------------------
##### This is utility class for testing
io.rxmicro.test.BlockingHttpClient=TooManyMethods

##### isRepositoryField is extendable, see comment
io.rxmicro.test.internal.DetectTypeRules=SimplifyBooleanReturns

##### printStackTrace allows to display error in separate thread
io.rxmicro.test.internal.TestedProcessProxy=AvoidPrintStackTrace

##### This class contains utility methods
io.rxmicro.test.json.JsonFactory=UseObjectForClearerAPI,ExcessiveParameterList

##### printStackTrace is used during unit testing
io.rxmicro.test.local.UnNamedModuleFixers=AvoidPrintStackTrace

##### It is private constructor. More info: https://github.com.pmd.pmd.issues.2461
io.rxmicro.test.local.model.TestModel=ExcessiveParameterList

##### Safes is top level class, which must catch ALL possible types of exceptions and log it
io.rxmicro.test.local.util.Safes=AvoidCatchingThrowable,AvoidPrintStackTrace

# --------------------------------------------- rxmicro-test-mockito -----------------------------------------------------------------------
##### It is not utility class
io.rxmicro.test.mockito.mongo.EstimatedDocumentCountMock=ClassNamingConventions

##### Direct array access increases a performance
io.rxmicro.test.mockito.httpclient.internal.model.ClientHttpResponseImpl=MethodReturnsInternalArray

##### NPE catching allows providing an error message with recommendations hot to fix this issue
io.rxmicro.test.mockito.r2dbc.SQLParamsMock=AvoidCatchingGenericException,AvoidCatchingNPE

# --------------------------------------------- rxmicro-slf4j-proxy ------------------------------------------------------------------------
##### This is logger
org.slf4j.Logger=ExcessivePublicCount,TooManyMethods

##### This is logger
org.slf4j.internal.Slf4jLoggerProxy=ExcessivePublicCount,TooManyMethods

# --------------------------------------------- rxmicro-annotation-processor ---------------------------------------------------------------
##### This workaround allows display error if java can't create an instance of annotation processor
io.rxmicro.annotation.processor.RxMicroAnnotationProcessor=AvoidCatchingThrowable

# -------------------------------------------- rxmicro-annotation-processor-integration-test -----------------------------------------------
##### For improvement of readability
io.rxmicro.annotation.processor.integration.test.ExternalModule=AvoidDuplicateLiterals

# -------------------------------------------- rxmicro-annotation-processor-rest-server ----------------------------------------------------
##### Redundant parentheses improves readability of complex logic expression: a || (b & c) || (d && e)
io.rxmicro.annotation.processor.rest.server.component.impl.RestControllerClassStructureBuilderImpl=UselessParentheses

# -------------------------------------------- rxmicro-annotation-processor-documentation-asciidoctor --------------------------------------
##### Used via reflection. See addTypeFormat method
io.rxmicro.annotation.processor.documentation.asciidoctor.component.impl.restrictions.primitive.DateTimePrimitiveConstraintReader=UnusedPrivateField

##### Structure of these methods is simple and understandable
io.rxmicro.annotation.processor.documentation.asciidoctor.component.impl.restrictions.primitive.NumberPrimitiveConstraintReader=ExcessiveMethodLength
io.rxmicro.annotation.processor.documentation.asciidoctor.component.impl.restrictions.primitive.StringPrimitiveConstraintReader=ExcessiveMethodLength,NcssCount