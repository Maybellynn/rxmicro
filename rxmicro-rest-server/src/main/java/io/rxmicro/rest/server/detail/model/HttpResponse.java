/*
 * Copyright (c) 2020. https://rxmicro.io
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.rxmicro.rest.server.detail.model;

import io.rxmicro.http.HttpHeaders;
import io.rxmicro.http.HttpVersion;

import java.math.BigDecimal;
import java.nio.charset.StandardCharsets;
import java.util.List;

import static io.rxmicro.http.HttpValues.listToString;

/**
 * Used by generated code that created by the {@code RxMicro Annotation Processor}.
 *
 * <p>
 * Represents a low level model for HTTP response and can be used to work with internal data.
 *
 * <p>
 * Read more:
 * <a href="https://docs.rxmicro.io/latest/user-guide/rest-controller.html#rest-controller-internals-basic-section">
 *     https://docs.rxmicro.io/latest/user-guide/rest-controller.html#rest-controller-internals-basic-section
 * </a>
 *
 * @author nedis
 * @since 0.1
 */
public interface HttpResponse {

    /**
     * Empty content.
     */
    byte[] EMPTY_CONTENT = new byte[0];

    /**
     * Sets the status code.
     *
     * @param status the status code
     */
    void setStatus(int status);

    /**
     * Sets the {@link HttpVersion}
     *
     * @param httpVersion the {@link HttpVersion}
     */
    void setVersion(HttpVersion httpVersion);

    /**
     * Adds the HTTP header with the specified name and value to the HTTP response generated by HTTP server.
     *
     * <p>
     * If {@code value} is {@code null} that noting will be added!
     *
     * @param name the specified name
     * @param value the specified value
     */
    void addHeader(String name,
                   String value);

    /**
     * Adds the HTTP header with the specified name and value to the HTTP response generated by HTTP server.
     *
     * <p>
     * If {@code value} is {@code null} that noting will be added!
     *
     * @param name the specified name
     * @param value the specified value
     */
    default void addHeader(final String name,
                           final Object value) {
        if (value != null) {
            addHeader(name, value.toString());
        }
    }

    /**
     * Adds the HTTP header with the specified name and value to the HTTP response generated by HTTP server.
     *
     * <p>
     * If {@code value} is {@code null} that noting will be added!
     *
     * @param name the specified name
     * @param value the specified value
     */
    default void addHeader(final String name,
                           final BigDecimal value) {
        if (value != null) {
            addHeader(name, value.toPlainString());
        }
    }

    /**
     * Adds the HTTP header with the specified name and value to the HTTP response generated by HTTP server.
     *
     * <p>
     * If {@code value} is {@code null} that noting will be added!
     *
     * @param name the specified name
     * @param value the specified value
     */
    default void addHeader(final String name,
                           final List<?> value) {
        if (value != null && !value.isEmpty()) {
            addHeader(name, listToString(value));
        }
    }

    /**
     * Sets or adds the {@link HttpHeaders}
     *
     * @param headers the {@link HttpHeaders}
     */
    void setOrAddHeaders(HttpHeaders headers);

    /**
     * Sets the HTTP header with the specified name and value to the HTTP response generated by HTTP server.
     *
     * <p>
     * If {@code value} is {@code null} that noting will be added!
     *
     * @param name the specified name
     * @param value the specified value
     */
    void setHeader(String name,
                   String value);

    /**
     * Sets the HTTP header with the specified name and value to the HTTP response generated by HTTP server.
     *
     * <p>
     * If {@code value} is {@code null} that noting will be added!
     *
     * @param name the specified name
     * @param value the specified value
     */
    default void setHeader(final String name,
                           final Object value) {
        if (value != null) {
            setHeader(name, value.toString());
        }
    }

    /**
     * Sets the HTTP header with the specified name and value to the HTTP response generated by HTTP server.
     *
     * <p>
     * If {@code value} is {@code null} that noting will be added!
     *
     * @param name the specified name
     * @param value the specified value
     */
    default void setHeader(final String name,
                           final BigDecimal value) {
        if (value != null) {
            setHeader(name, value.toPlainString());
        }
    }

    /**
     * Sets the HTTP header with the specified name and value to the HTTP response generated by HTTP server.
     *
     * <p>
     * If {@code value} is {@code null} that noting will be added!
     *
     * @param name the specified name
     * @param value the specified value
     */
    default void setHeader(final String name,
                           final List<?> value) {
        if (value != null && !value.isEmpty()) {
            setHeader(name, listToString(value));
        }
    }

    /**
     * Sets the HTTP body as byte array.
     *
     * @param content the HTTP body as byte array
     */
    void setContent(byte[] content);

    /**
     * Sets the HTTP body as {@code UTF8} string.
     *
     * @param content the HTTP body as {@code UTF8} string
     */
    default void setContent(final String content) {
        setContent(content.getBytes(StandardCharsets.UTF_8));
    }
}
