#
# Copyright (c) 2020. https://rxmicro.io
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# ------------------------------------------------------------------------------------------------------------------------------------------
# Read more: http://maven.apache.org/plugins/maven-pmd-plugin/examples/violation-exclusions.html
# --------------------------------------------- rxmicro-common -----------------------------------------------------------------------------
##### This is util class for unit testing
io.rxmicro.common.local.TestLoggers=SystemPrintln

##### This class contains utility methods
io.rxmicro.common.util.ExCollections=UseObjectForClearerAPI

##### Redundant parentheses improves readability of complex logic expression: a || (b & c) || (d && e)
io.rxmicro.common.util.Strings=UselessParentheses

##### This is utility class
io.rxmicro.common.util.Requires=AvoidThrowingNullPointerException

# --------------------------------------------- rxmicro-runtime ----------------------------------------------------------------------------
##### Thread is used as Shutdown hook
##### InstanceContainer is top level class, which must catch ALL possible types of exceptions
io.rxmicro.runtime.local.InstanceContainer=AvoidCatchingThrowable

##### This is not a singleton class. It seems that PMD does not analyze static modifier that is required for Singleton pattern
io.rxmicro.runtime.local.provider.ProxyInstanceProvider=SingletonClassReturningNewInstance

# --------------------------------------------- rxmicro-logger -----------------------------------------------------------------------------
##### System err used as top level logger if internal error occurred
##### LoggerFactory is top level class, which must catch ALL possible types of exceptions and log it
io.rxmicro.logger.LoggerFactory=SystemPrintln,AvoidCatchingThrowable,AvoidPrintStackTrace

##### This is a logger
io.rxmicro.logger.Logger=ExcessivePublicCount,TooManyMethods,ExcessiveClassLength

##### This is a logger
io.rxmicro.logger.impl.AbstractLogger=ExcessivePublicCount,TooManyMethods,ExcessiveClassLength,GodClass,CyclomaticComplexity

##### Conflict with lgtm alerts
io.rxmicro.logger.internal.jul.config.adapter.SystemOutConsoleHandler=AvoidSynchronizedAtMethodLevel

# --------------------------------------------- rxmicro-http -------------------------------------------------------------------------------
##### This class contains utility methods
io.rxmicro.http.HttpHeaders=UseObjectForClearerAPI

##### This class contains utility methods
io.rxmicro.http.QueryParams=UseObjectForClearerAPI

# --------------------------------------------- rxmicro-rest -------------------------------------------------------------------------------
##### Direct array access increases a performance
io.rxmicro.rest.model.HttpCallFailedException=ArrayIsStoredDirectly,MethodReturnsInternalArray

##### This is utility class that used by generated converters
io.rxmicro.rest.local.FromStringValueConverter=CyclomaticComplexity,GodClass,TooManyMethods

# --------------------------------------------- rxmicro-rest-server ------------------------------------------------------------------------
##### This is default value
io.rxmicro.rest.server.HttpServerConfig=AvoidUsingHardCodedIP

##### This is template signature,i.e. method that handles a request must be:
########## CompletionStage<HttpResponse> ${NAME}(PathVariableMapping, HttpRequest)
io.rxmicro.rest.server.detail.component.BadHttpRequestRestController=UnusedFormalParameter

##### This is template signature,i.e. method that handles a request must be:
########## CompletionStage<HttpResponse> ${NAME}(PathVariableMapping, HttpRequest)
io.rxmicro.rest.server.detail.component.CrossOriginResourceSharingPreflightRestController=UnusedFormalParameter

##### This is template signature,i.e. method that handles a request must be:
########## CompletionStage<HttpResponse> ${NAME}(PathVariableMapping, HttpRequest)
io.rxmicro.rest.server.detail.component.HttpHealthCheckRestController=UnusedFormalParameter

##### BaseRestControllerMethod is top level class, which must catch ALL possible types of exceptions and log it
io.rxmicro.rest.server.internal.BaseRestControllerMethod=AvoidCatchingThrowable

# --------------------------------------------- rxmicro-rest-server-netty ------------------------------------------------------------------
##### NettyRequestHandler is top level class, which must catch ALL possible types of exceptions and log it
io.rxmicro.rest.server.netty.internal.component.NettyRequestHandler=AvoidCatchingThrowable

##### Direct array access increases a performance
io.rxmicro.rest.server.netty.internal.model.NettyHttpResponse=ArrayIsStoredDirectly,MethodReturnsInternalArray

# --------------------------------------------- rxmicro-json -------------------------------------------------------------------------------
##### This is short-lived object
io.rxmicro.json.internal.writer.JsonToStringBuilder=AvoidStringBufferField

##### Short type is an implementation contract
io.rxmicro.json.JsonNumber=AvoidUsingShortType
# --------------------------------------------- rxmicro-exchange-json ----------------------------------------------------------------------
##### This is utility class that used by generated converters
io.rxmicro.exchange.json.detail.ModelFromJsonConverter=TooManyMethods,CyclomaticComplexity,GodClass,UnusedLocalVariable,\
                                                       AvoidDuplicateLiterals,ExcessiveClassLength

# --------------------------------------------- rxmicro-data-mono --------------------------------------------------------------------------
##### This is utility class that used by generated converters
io.rxmicro.data.mongo.internal.AbstractEntityMongoDBConverter=TooManyMethods,GodClass

# --------------------------------------------- rxmicro-data-sql ---------------------------------------------------------------------------
##### setIsolationLevel returns reactive type
io.rxmicro.data.sql.model.completablefuture.Transaction=LinguisticNaming
io.rxmicro.data.sql.model.reactor.Transaction=LinguisticNaming
io.rxmicro.data.sql.model.rxjava3.Transaction=LinguisticNaming

# --------------------------------------------- rxmicro-data-sql-r2dbc ---------------------------------------------------------------------
##### It seems that UnnecessaryFullyQualifiedName check contains bug: https://github.com/pmd/pmd/issues/1790
io.rxmicro.data.sql.r2dbc.internal.AbstractTransaction=UnnecessaryFullyQualifiedName

##### var args are not good choice for this case
io.rxmicro.data.sql.r2dbc.detail.AbstractR2DBCRepository=UseVarargs
io.rxmicro.data.sql.r2dbc.internal.Statements=UseVarargs

# --------------------------------------------- rxmicro-data-sql-r2dbc-postgresql ----------------------------------------------------------
##### Connection pool closed at shutdown hook. See PostgreSQLConnectionPoolBuilder.R2DBCPostgreSQLConnectionPool
io.rxmicro.data.sql.r2dbc.postgresql.detail.PostgreSQLRepositoryFactory=CloseResource

# --------------------------------------------- rxmicro-tool-common ------------------------------------------------------------------------
##### This is util class
io.rxmicro.tool.common.Reflections=GodClass

# --------------------------------------------- rxmicro-test -------------------------------------------------------------------------------
##### This is utility class for testing
io.rxmicro.test.BlockingHttpClient=TooManyMethods

##### isRepositoryField is extendable, see comment
io.rxmicro.test.internal.DetectTypeRules=SimplifyBooleanReturns

##### printStackTrace allows to display error in separate thread
io.rxmicro.test.internal.TestedProcessProxy=AvoidPrintStackTrace

##### This class contains utility methods
io.rxmicro.test.json.JsonFactory=UseObjectForClearerAPI

##### printStackTrace is used during unit testing
io.rxmicro.test.local.UnNamedModuleFixers=AvoidPrintStackTrace

##### Safes is top level class, which must catch ALL possible types of exceptions and log it
io.rxmicro.test.local.util.Safes=AvoidCatchingThrowable

# --------------------------------------------- rxmicro-test-mockito -----------------------------------------------------------------------
##### It is not utility class
io.rxmicro.test.mockito.mongo.EstimatedDocumentCountMock=ClassNamingConventions

##### Direct array access increases a performance
io.rxmicro.test.mockito.httpclient.internal.model.ClientHttpResponseImpl=MethodReturnsInternalArray

# --------------------------------------------- rxmicro-slf4j-proxy ------------------------------------------------------------------------
##### This is logger
org.slf4j.Logger=ExcessivePublicCount,TooManyMethods

##### This is logger
org.slf4j.internal.Slf4jLoggerProxy=ExcessivePublicCount,TooManyMethods,CyclomaticComplexity

# --------------------------------------------- rxmicro-annotation-processor ---------------------------------------------------------------
##### This workaround allows display error if java can't create an instance of annotation processor
io.rxmicro.annotation.processor.RxMicroAnnotationProcessor=AvoidCatchingThrowable

# -------------------------------------------- rxmicro-annotation-processor-integration-test -----------------------------------------------
##### For improvement of readability
io.rxmicro.annotation.processor.integration.test.ExternalModule=AvoidDuplicateLiterals

# -------------------------------------------- rxmicro-annotation-processor-common ---------------------------------------------------------
##### SystemPrintln is used during work of annotation processor
io.rxmicro.annotation.processor.common.util.InternalLoggers=SystemPrintln,AvoidPrintStackTrace

##### Safes is top level class, which must catch ALL possible types of exceptions and log it
io.rxmicro.annotation.processor.common.component.impl.AbstractRxMicroProcessor=AvoidCatchingGenericException,AvoidCatchingThrowable,\
                                                                               AvoidSynchronizedAtMethodLevel
io.rxmicro.annotation.processor.common.util.Injects=AvoidCatchingGenericException,AvoidCatchingThrowable

##### This is util class
io.rxmicro.annotation.processor.common.util.Elements=GodClass
io.rxmicro.annotation.processor.common.util.validators.TypeValidators=GodClass

# -------------------------------------------- rxmicro-annotation-processor-data-sql -------------------------------------------------------
##### isRepositoryField is extendable, see comment
io.rxmicro.annotation.processor.data.sql.component.impl.MethodParamResolver=SimplifyBooleanReturns

# -------------------------------------------- rxmicro-annotation-processor-data-mongo -----------------------------------------------------
##### It seems that it is bug in PMD. See https://github.com/pmd/pmd/issues/2464
io.rxmicro.annotation.processor.data.mongo.component.impl.method.AggregateOperationMongoRepositoryMethodModelBuilder=LooseCoupling
io.rxmicro.annotation.processor.data.mongo.component.impl.method.DistinctOperationMongoRepositoryMethodModelBuilder=LooseCoupling
io.rxmicro.annotation.processor.data.mongo.component.impl.method.FindOperationMongoRepositoryMethodModelBuilder=LooseCoupling

# -------------------------------------------- rxmicro-annotation-processor-rest -----------------------------------------------------------
##### Simplified expression is not readable
io.rxmicro.annotation.processor.rest.component.impl.RestModelValidatorBuilderImpl=SimplifiedTernary

# -------------------------------------------- rxmicro-annotation-processor-rest-server ----------------------------------------------------
##### Redundant parentheses improves readability of complex logic expression: a || (b & c) || (d && e)
io.rxmicro.annotation.processor.rest.server.component.impl.RestControllerClassStructureBuilderImpl=UselessParentheses

# -------------------------------------------- rxmicro-annotation-processor-documentation --------------------------------------------------
##### Hardcoded IP is an example, not real value
io.rxmicro.annotation.processor.documentation.component.impl.example.builder.StringExampleBuilder=AvoidUsingHardCodedIP

##### Redundant parentheses improves readability of complex logic expression: a || (b & c) || (d && e)
io.rxmicro.annotation.processor.documentation.component.impl.example.builder.DateTimeExampleBuilder=UselessParentheses

##### This is config class
io.rxmicro.annotation.processor.documentation.DocumentationDependenciesModule=CouplingBetweenObjects

# -------------------------------------------- rxmicro-annotation-processor-documentation-asciidoctor --------------------------------------
##### Used via reflection. See addTypeFormat method
io.rxmicro.annotation.processor.documentation.asciidoctor.component.impl.restrictions.primitive.DateTimePrimitiveConstraintReader=\
                                                                                                                UnusedPrivateField
