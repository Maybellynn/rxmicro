<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2020. https://rxmicro.io
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- ~~~~~~~ Root page: https://pmd.github.io/latest/pmd_rules_java.html ~~~~~~ -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- ~~~~~ https://pmd.github.io/latest/pmd_userdocs_making_rulesets.html ~~~~~ -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<!-- ~~~~~ https://pmd.github.io/latest/pmd_rules_java_multithreading.html ~~~~ -->
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
<ruleset name="Default Maven PMD Plugin Ruleset"
         xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0
                            http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
    <description>RxMicro multithreading ruleset</description>

    <rule ref="category/java/multithreading.xml/AvoidSynchronizedAtMethodLevel"/>
    <rule ref="category/java/multithreading.xml/AvoidThreadGroup"/>

    <!-- Sometimes using of volatile is required. See: https://www.ibm.com/developerworks/java/library/j-jtp06197/index.html -->
    <!-- rule ref="category/java/multithreading.xml/AvoidUsingVolatile"/ -->

    <!-- JEE specific rule: -->
    <!-- rule ref="category/java/multithreading.xml/DoNotUseThreads"/ -->

    <rule ref="category/java/multithreading.xml/DontCallThreadRun"/>
    <rule ref="category/java/multithreading.xml/DoubleCheckedLocking"/>

    <!-- Reactive stream libs do not require the thread safe singletons: -->
    <!-- rule ref="category/java/multithreading.xml/NonThreadSafeSingleton"/ -->

    <rule ref="category/java/multithreading.xml/UnsynchronizedStaticFormatter">
        <properties>
            <property name="allowMethodLevelSynchronization" value="false"/>
        </properties>
    </rule>

    <!-- ConcurrentHashMap is not actual for reactive programming! -->
    <!-- rule ref="category/java/multithreading.xml/UseConcurrentHashMap" /-->

    <rule ref="category/java/multithreading.xml/UseNotifyAllInsteadOfNotify"/>
</ruleset>
