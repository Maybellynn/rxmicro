package io.rxmicro.examples.rest.controller.model.field.access.headers.gettersetter;

import io.rxmicro.examples.rest.controller.model.field.access.Status;
import io.rxmicro.rest.server.detail.component.ServerModelWriter;
import io.rxmicro.rest.server.detail.model.HttpResponse;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$ResponseServerModelWriter extends ServerModelWriter<Response> {

    public $$ResponseServerModelWriter(final boolean humanReadableOutput) {
        //do nothing
    }

    @Override
    public void write(final Response model,
                      final HttpResponse response) {
        writePrimitivesToResponse(model, response);
    }

    public void writePrimitivesToResponse(final Response model,
                                          final HttpResponse response) {
        response.setHeader("booleanHeader", model.getBooleanHeader());
        response.setHeader("byteHeader", model.getByteHeader());
        response.setHeader("shortHeader", model.getShortHeader());
        response.setHeader("intHeader", model.getIntHeader());
        response.setHeader("longHeader", model.getLongHeader());
        response.setHeader("bigIntHeader", model.getBigIntHeader());
        response.setHeader("floatHeader", model.getFloatHeader());
        response.setHeader("doubleHeader", model.getDoubleHeader());
        response.setHeader("decimalHeader", model.getDecimalHeader());
        response.setHeader("charHeader", model.getCharHeader());
        response.setHeader("stringHeader", model.getStringHeader());
        response.setHeader("instantHeader", model.getInstantHeader());
        response.setHeader("enumHeader", model.getEnumHeader());
        response.setHeader("booleanHeaderList", model.getBooleanHeaderList());
        response.setHeader("byteHeaderList", model.getByteHeaderList());
        response.setHeader("shortHeaderList", model.getShortHeaderList());
        response.setHeader("intHeaderList", model.getIntHeaderList());
        response.setHeader("longHeaderList", model.getLongHeaderList());
        response.setHeader("bigIntHeaderList", model.getBigIntHeaderList());
        response.setHeader("floatHeaderList", model.getFloatHeaderList());
        response.setHeader("doubleHeaderList", model.getDoubleHeaderList());
        response.setHeader("decimalHeaderList", model.getDecimalHeaderList());
        response.setHeader("charHeaderList", model.getCharHeaderList());
        response.setHeader("stringHeaderList", model.getStringHeaderList());
        response.setHeader("instantHeaderList", model.getInstantHeaderList());
        response.setHeader("enumHeaderList", model.getEnumHeaderList());
        response.setHeader("booleanHeaderSet", model.getBooleanHeaderSet());
        response.setHeader("byteHeaderSet", model.getByteHeaderSet());
        response.setHeader("shortHeaderSet", model.getShortHeaderSet());
        response.setHeader("intHeaderSet", model.getIntHeaderSet());
        response.setHeader("longHeaderSet", model.getLongHeaderSet());
        response.setHeader("bigIntHeaderSet", model.getBigIntHeaderSet());
        response.setHeader("floatHeaderSet", model.getFloatHeaderSet());
        response.setHeader("doubleHeaderSet", model.getDoubleHeaderSet());
        response.setHeader("decimalHeaderSet", model.getDecimalHeaderSet());
        response.setHeader("charHeaderSet", model.getCharHeaderSet());
        response.setHeader("stringHeaderSet", model.getStringHeaderSet());
        response.setHeader("instantHeaderSet", model.getInstantHeaderSet());
        response.setHeader("enumHeaderSet", model.getEnumHeaderSet());
        for (final Status item : model.getRepeatingEnumHeaderList()) {
            response.addHeader("repeatingEnumHeaderList", item);
        }
        for (final Status item : model.getRepeatingEnumHeaderSet()) {
            response.addHeader("repeatingEnumHeaderSet", item);
        }
    }
}
