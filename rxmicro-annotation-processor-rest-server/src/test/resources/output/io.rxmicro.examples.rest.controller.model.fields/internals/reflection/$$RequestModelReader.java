package io.rxmicro.examples.rest.controller.model.fields.internals.reflection;

import io.rxmicro.http.HttpHeaders;
import io.rxmicro.rest.model.HttpModelType;
import io.rxmicro.rest.model.PathVariableMapping;
import io.rxmicro.rest.server.detail.component.ModelReader;
import io.rxmicro.rest.server.detail.model.HttpRequest;

import static rxmicro.$$Reflections.setFieldValue;

/**
 * Generated by rxmicro annotation processor
 *
 * @link https://rxmicro.io
 */
public final class $$RequestModelReader extends ModelReader<Request> {

    @Override
    public Request read(final PathVariableMapping pathVariableMapping,
                        final HttpRequest request,
                        final boolean readParametersFromBody) {
        final Request model = new Request();
        setFieldValue(model, "version", request.getVersion());
        setFieldValue(model, "headers", request.getHeaders());
        setFieldValue(model, "request", request);
        setFieldValue(model, "remoteAddress1", request.getRemoteAddress());
        setFieldValue(model, "remoteAddress2", String.valueOf(request.getRemoteAddress()));
        setFieldValue(model, "urlPath", request.getUri());
        setFieldValue(model, "method", request.getMethod());
        setFieldValue(model, "body", request.getContent());
        final HttpHeaders httpHeaders = request.getHeaders();
        setFieldValue(model, "id", toString(httpHeaders.getValue("Request-Id"), HttpModelType.HEADER, "Request-Id"));
        return model;
    }
}
