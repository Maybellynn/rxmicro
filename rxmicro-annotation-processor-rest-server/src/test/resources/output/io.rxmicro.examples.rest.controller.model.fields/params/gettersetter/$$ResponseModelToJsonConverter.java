package io.rxmicro.examples.rest.controller.model.fields.params.gettersetter;

import io.rxmicro.examples.rest.controller.model.fields.params.gettersetter.nested.$$NestedModelToJsonConverter;
import io.rxmicro.exchange.json.detail.ModelToJsonConverter;
import io.rxmicro.json.JsonObjectBuilder;

import java.util.Map;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$ResponseModelToJsonConverter extends ModelToJsonConverter<Response> {

    private final $$NestedModelToJsonConverter nestedModelToJsonConverter =
            new $$NestedModelToJsonConverter();

    @Override
    public Map<String, Object> toJsonObject(final Response model) {
        final JsonObjectBuilder builder = new JsonObjectBuilder();
        putValues(model, builder);
        return builder.build();
    }

    protected void putValues(final Response model,
                             final JsonObjectBuilder builder) {
        builder.put("booleanParameter", model.getBooleanParameter());
        builder.put("byteParameter", model.getByteParameter());
        builder.put("shortParameter", model.getShortParameter());
        builder.put("intParameter", model.getIntParameter());
        builder.put("longParameter", model.getLongParameter());
        builder.put("bigIntParameter", model.getBigIntParameter());
        builder.put("floatParameter", model.getFloatParameter());
        builder.put("doubleParameter", model.getDoubleParameter());
        builder.put("decimalParameter", model.getDecimalParameter());
        builder.put("charParameter", model.getCharParameter());
        builder.put("stringParameter", model.getStringParameter());
        builder.put("instantParameter", model.getInstantParameter());
        builder.put("status", model.getStatus());
        builder.put("booleanParameters", model.getBooleanParameters());
        builder.put("byteParameters", model.getByteParameters());
        builder.put("shortParameters", model.getShortParameters());
        builder.put("intParameters", model.getIntParameters());
        builder.put("longParameters", model.getLongParameters());
        builder.put("bigIntParameters", model.getBigIntParameters());
        builder.put("floatParameters", model.getFloatParameters());
        builder.put("doubleParameters", model.getDoubleParameters());
        builder.put("decimalParameters", model.getDecimalParameters());
        builder.put("charParameters", model.getCharParameters());
        builder.put("stringParameters", model.getStringParameters());
        builder.put("instantParameters", model.getInstantParameters());
        builder.put("statuses", model.getStatuses());
        builder.put("booleanParameterSet", model.getBooleanParameterSet());
        builder.put("byteParameterSet", model.getByteParameterSet());
        builder.put("shortParameterSet", model.getShortParameterSet());
        builder.put("intParameterSet", model.getIntParameterSet());
        builder.put("longParameterSet", model.getLongParameterSet());
        builder.put("bigIntParameterSet", model.getBigIntParameterSet());
        builder.put("floatParameterSet", model.getFloatParameterSet());
        builder.put("doubleParameterSet", model.getDoubleParameterSet());
        builder.put("decimalParameterSet", model.getDecimalParameterSet());
        builder.put("charParameterSet", model.getCharParameterSet());
        builder.put("stringParameterSet", model.getStringParameterSet());
        builder.put("instantParameterSet", model.getInstantParameterSet());
        builder.put("statusSet", model.getStatusSet());
        builder.put("nested", convertFromObjectIfNotNull(nestedModelToJsonConverter, model.getNested()));
        builder.put("nestedList", convertFromListIfNotNull(nestedModelToJsonConverter, model.getNestedList()));
        builder.put("nestedSet", convertFromSetIfNotNull(nestedModelToJsonConverter, model.getNestedSet()));
        builder.put("booleanData", model.getBooleanData());
        builder.put("byteData", model.getByteData());
        builder.put("shortData", model.getShortData());
        builder.put("integerData", model.getIntegerData());
        builder.put("longData", model.getLongData());
        builder.put("bigIntegerData", model.getBigIntegerData());
        builder.put("floatData", model.getFloatData());
        builder.put("doubleData", model.getDoubleData());
        builder.put("bigDecimalData", model.getBigDecimalData());
        builder.put("characterData", model.getCharacterData());
        builder.put("stringData", model.getStringData());
        builder.put("enumData", model.getEnumData());
        builder.put("instantData", model.getInstantData());
        builder.put("nestedMap", convertFromMapIfNotNull(nestedModelToJsonConverter, model.getNestedMap()));
    }
}
