package io.rxmicro.examples.rest.controller.model.fields.headers;

import io.rxmicro.examples.rest.controller.model.fields.Status;
import io.rxmicro.http.HttpHeaders;
import io.rxmicro.rest.model.HttpModelType;
import io.rxmicro.rest.model.PathVariableMapping;
import io.rxmicro.rest.server.detail.component.ModelReader;
import io.rxmicro.rest.server.detail.model.HttpRequest;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$VirtualVirtualHeadersRequestModelReader extends ModelReader<$$VirtualVirtualHeadersRequest> {

    @Override
    public $$VirtualVirtualHeadersRequest read(final PathVariableMapping pathVariableMapping,
                                               final HttpRequest request,
                                               final boolean readParametersFromBody) {
        final $$VirtualVirtualHeadersRequest model = new $$VirtualVirtualHeadersRequest();
        read(pathVariableMapping, request, model);
        return model;
    }

    protected void read(final PathVariableMapping pathVariableMapping,
                        final HttpRequest request,
                        final $$VirtualVirtualHeadersRequest model) {
        final HttpHeaders httpHeaders = request.getHeaders();
        model.booleanParameter = toBoolean(httpHeaders.getValue("Boolean-Parameter"), HttpModelType.HEADER, "Boolean-Parameter");
        model.byteParameter = toByte(httpHeaders.getValue("Byte-Parameter"), HttpModelType.HEADER, "Byte-Parameter");
        model.shortParameter = toShort(httpHeaders.getValue("Short-Parameter"), HttpModelType.HEADER, "Short-Parameter");
        model.intParameter = toInteger(httpHeaders.getValue("Int-Parameter"), HttpModelType.HEADER, "Int-Parameter");
        model.longParameter = toLong(httpHeaders.getValue("Long-Parameter"), HttpModelType.HEADER, "Long-Parameter");
        model.bigIntParameter = toBigInteger(httpHeaders.getValue("Big-Int-Parameter"), HttpModelType.HEADER, "Big-Int-Parameter");
        model.floatParameter = toFloat(httpHeaders.getValue("Float-Parameter"), HttpModelType.HEADER, "Float-Parameter");
        model.doubleParameter = toDouble(httpHeaders.getValue("Double-Parameter"), HttpModelType.HEADER, "Double-Parameter");
        model.decimalParameter = toBigDecimal(httpHeaders.getValue("Decimal-Parameter"), HttpModelType.HEADER, "Decimal-Parameter");
        model.charParameter = toCharacter(httpHeaders.getValue("Char-Parameter"), HttpModelType.HEADER, "Char-Parameter");
        model.stringParameter = toString(httpHeaders.getValue("String-Parameter"), HttpModelType.HEADER, "String-Parameter");
        model.instantParameter = toInstant(httpHeaders.getValue("Instant-Parameter"), HttpModelType.HEADER, "Instant-Parameter");
        model.status = toEnum(Status.class, httpHeaders.getValue("Status"), HttpModelType.HEADER, "Status");
        model.booleanParameters = toBooleanList(httpHeaders.getValues("Boolean-Parameters"), HttpModelType.HEADER, "Boolean-Parameters");
        model.byteParameters = toByteList(httpHeaders.getValues("Byte-Parameters"), HttpModelType.HEADER, "Byte-Parameters");
        model.shortParameters = toShortList(httpHeaders.getValues("Short-Parameters"), HttpModelType.HEADER, "Short-Parameters");
        model.intParameters = toIntegerList(httpHeaders.getValues("Int-Parameters"), HttpModelType.HEADER, "Int-Parameters");
        model.longParameters = toLongList(httpHeaders.getValues("Long-Parameters"), HttpModelType.HEADER, "Long-Parameters");
        model.bigIntParameters = toBigIntegerList(httpHeaders.getValues("Big-Int-Parameters"), HttpModelType.HEADER, "Big-Int-Parameters");
        model.floatParameters = toFloatList(httpHeaders.getValues("Float-Parameters"), HttpModelType.HEADER, "Float-Parameters");
        model.doubleParameters = toDoubleList(httpHeaders.getValues("Double-Parameters"), HttpModelType.HEADER, "Double-Parameters");
        model.decimalParameters = toBigDecimalList(httpHeaders.getValues("Decimal-Parameters"), HttpModelType.HEADER, "Decimal-Parameters");
        model.charParameters = toCharacterList(httpHeaders.getValues("Char-Parameters"), HttpModelType.HEADER, "Char-Parameters");
        model.stringParameters = toStringList(httpHeaders.getValues("String-Parameters"), HttpModelType.HEADER, "String-Parameters");
        model.instantParameters = toInstantList(httpHeaders.getValues("Instant-Parameters"), HttpModelType.HEADER, "Instant-Parameters");
        model.statuses = toEnumList(Status.class, httpHeaders.getValues("Statuses"), HttpModelType.HEADER, "Statuses");
        model.booleanParameterSet = toBooleanSet(httpHeaders.getValues("Boolean-Parameter-Set"), HttpModelType.HEADER, "Boolean-Parameter-Set");
        model.byteParameterSet = toByteSet(httpHeaders.getValues("Byte-Parameter-Set"), HttpModelType.HEADER, "Byte-Parameter-Set");
        model.shortParameterSet = toShortSet(httpHeaders.getValues("Short-Parameter-Set"), HttpModelType.HEADER, "Short-Parameter-Set");
        model.intParameterSet = toIntegerSet(httpHeaders.getValues("Int-Parameter-Set"), HttpModelType.HEADER, "Int-Parameter-Set");
        model.longParameterSet = toLongSet(httpHeaders.getValues("Long-Parameter-Set"), HttpModelType.HEADER, "Long-Parameter-Set");
        model.bigIntParameterSet = toBigIntegerSet(httpHeaders.getValues("Big-Int-Parameter-Set"), HttpModelType.HEADER, "Big-Int-Parameter-Set");
        model.floatParameterSet = toFloatSet(httpHeaders.getValues("Float-Parameter-Set"), HttpModelType.HEADER, "Float-Parameter-Set");
        model.doubleParameterSet = toDoubleSet(httpHeaders.getValues("Double-Parameter-Set"), HttpModelType.HEADER, "Double-Parameter-Set");
        model.decimalParameterSet = toBigDecimalSet(httpHeaders.getValues("Decimal-Parameter-Set"), HttpModelType.HEADER, "Decimal-Parameter-Set");
        model.charParameterSet = toCharacterSet(httpHeaders.getValues("Char-Parameter-Set"), HttpModelType.HEADER, "Char-Parameter-Set");
        model.stringParameterSet = toStringSet(httpHeaders.getValues("String-Parameter-Set"), HttpModelType.HEADER, "String-Parameter-Set");
        model.instantParameterSet = toInstantSet(httpHeaders.getValues("Instant-Parameter-Set"), HttpModelType.HEADER, "Instant-Parameter-Set");
        model.statusSet = toEnumSet(Status.class, httpHeaders.getValues("Status-Set"), HttpModelType.HEADER, "Status-Set");
    }
}
