package io.rxmicro.examples.rest.controller.model.fields.headers.direct;

import io.rxmicro.examples.rest.controller.model.fields.Status;
import io.rxmicro.rest.server.detail.component.ModelWriter;
import io.rxmicro.rest.server.detail.model.HttpResponse;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$ResponseModelWriter extends ModelWriter<Response> {

    public $$ResponseModelWriter(final boolean humanReadableOutput) {
        //do nothing
    }

    @Override
    public void write(final Response model,
                      final HttpResponse response) {
        response.setHeader("booleanParameter", model.booleanParameter);
        response.setHeader("byteParameter", model.byteParameter);
        response.setHeader("shortParameter", model.shortParameter);
        response.setHeader("intParameter", model.intParameter);
        response.setHeader("longParameter", model.longParameter);
        response.setHeader("bigIntParameter", model.bigIntParameter);
        response.setHeader("floatParameter", model.floatParameter);
        response.setHeader("doubleParameter", model.doubleParameter);
        response.setHeader("decimalParameter", model.decimalParameter);
        response.setHeader("charParameter", model.charParameter);
        response.setHeader("stringParameter", model.stringParameter);
        response.setHeader("instantParameter", model.instantParameter);
        response.setHeader("status", model.status);
        response.setHeader("booleanParameters", model.booleanParameters);
        response.setHeader("byteParameters", model.byteParameters);
        response.setHeader("shortParameters", model.shortParameters);
        response.setHeader("intParameters", model.intParameters);
        response.setHeader("longParameters", model.longParameters);
        response.setHeader("bigIntParameters", model.bigIntParameters);
        response.setHeader("floatParameters", model.floatParameters);
        response.setHeader("doubleParameters", model.doubleParameters);
        response.setHeader("decimalParameters", model.decimalParameters);
        response.setHeader("charParameters", model.charParameters);
        response.setHeader("stringParameters", model.stringParameters);
        response.setHeader("instantParameters", model.instantParameters);
        response.setHeader("statuses", model.statuses);
        response.setHeader("booleanParameterSet", model.booleanParameterSet);
        response.setHeader("byteParameterSet", model.byteParameterSet);
        response.setHeader("shortParameterSet", model.shortParameterSet);
        response.setHeader("intParameterSet", model.intParameterSet);
        response.setHeader("longParameterSet", model.longParameterSet);
        response.setHeader("bigIntParameterSet", model.bigIntParameterSet);
        response.setHeader("floatParameterSet", model.floatParameterSet);
        response.setHeader("doubleParameterSet", model.doubleParameterSet);
        response.setHeader("decimalParameterSet", model.decimalParameterSet);
        response.setHeader("charParameterSet", model.charParameterSet);
        response.setHeader("stringParameterSet", model.stringParameterSet);
        response.setHeader("instantParameterSet", model.instantParameterSet);
        response.setHeader("statusSet", model.statusSet);
        for (final Status item : model.repeatingStatuses) {
            response.addHeader("repeatingStatuses", item);
        }
        for (final Status item : model.repeatingStatusSet) {
            response.addHeader("repeatingStatusSet", item);
        }
    }
}
