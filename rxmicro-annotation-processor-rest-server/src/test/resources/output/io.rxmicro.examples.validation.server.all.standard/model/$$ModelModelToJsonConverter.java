package io.rxmicro.examples.validation.server.all.standard.model;

import io.rxmicro.exchange.json.detail.ModelToJsonConverter;
import io.rxmicro.json.JsonObjectBuilder;

import java.util.Map;

/**
 * Generated by rxmicro annotation processor
 *
 * @link https://rxmicro.io
 */
public final class $$ModelModelToJsonConverter extends ModelToJsonConverter<Model> {

    @Override
    public Map<String, Object> toJsonObject(final Model model) {
        return new JsonObjectBuilder()
                .put("optionalParameter", model.optionalParameter)
                .put("booleanParameter", model.booleanParameter)
                .put("byteParameter", model.byteParameter)
                .put("shortParameter", model.shortParameter)
                .put("intParameter", model.intParameter)
                .put("longParameter", model.longParameter)
                .put("bigIntParameter", model.bigIntParameter)
                .put("floatParameter", model.floatParameter)
                .put("doubleParameter", model.doubleParameter)
                .put("decimalParameter", model.decimalParameter)
                .put("charParameter", model.charParameter)
                .put("stringParameter", model.stringParameter)
                .put("instantParameter", model.instantParameter)
                .put("colorParameter", model.colorParameter)
                .put("optionalList", model.optionalList)
                .put("booleanValues", model.booleanValues)
                .put("byteValues", model.byteValues)
                .put("shortValues", model.shortValues)
                .put("intValues", model.intValues)
                .put("longValues", model.longValues)
                .put("charValues", model.charValues)
                .put("floatValues", model.floatValues)
                .put("doubleValues", model.doubleValues)
                .put("decimals", model.decimals)
                .put("bigIntegers", model.bigIntegers)
                .put("strings", model.strings)
                .put("instants", model.instants)
                .put("colors", model.colors)
                .put("countryCodeAlpha2", model.countryCodeAlpha2)
                .put("countryCodeAlpha3", model.countryCodeAlpha3)
                .put("countryCodeNumeric", model.countryCodeNumeric)
                .put("base64URLEncodedBase", model.base64URLEncodedBase)
                .put("base64URLEncodedUrl", model.base64URLEncodedUrl)
                .put("ip", model.ip)
                .put("ip4", model.ip4)
                .put("ip6", model.ip6)
                .put("lat111km", model.lat111km)
                .put("lng111km", model.lng111km)
                .put("lat11km", model.lat11km)
                .put("lng11km", model.lng11km)
                .put("lat1km", model.lat1km)
                .put("lng1km", model.lng1km)
                .put("lat111m", model.lat111m)
                .put("lng111m", model.lng111m)
                .put("lat11m", model.lat11m)
                .put("lng11m", model.lng11m)
                .put("lat1m", model.lat1m)
                .put("lng1m", model.lng1m)
                .put("lat11cm", model.lat11cm)
                .put("lng11cm", model.lng11cm)
                .put("lat1cm", model.lat1cm)
                .put("lng1cm", model.lng1cm)
                .build();
    }
}
