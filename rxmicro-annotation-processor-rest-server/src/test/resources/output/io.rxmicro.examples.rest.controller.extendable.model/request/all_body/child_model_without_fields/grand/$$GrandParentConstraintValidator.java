package io.rxmicro.examples.rest.controller.extendable.model.request.all_body.child_model_without_fields.grand;

import io.rxmicro.model.ModelType;
import io.rxmicro.rest.model.HttpModelType;
import io.rxmicro.validation.ConstraintValidator;
import io.rxmicro.validation.validator.NotEmptyStringConstraintValidator;
import io.rxmicro.validation.validator.RequiredAndNotEmptyStringConstraintValidator;

import static io.rxmicro.validation.detail.StatelessValidators.getStatelessValidator;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$GrandParentConstraintValidator implements ConstraintValidator<GrandParent> {

    private final NotEmptyStringConstraintValidator notEmptyStringConstraintValidator =
            getStatelessValidator(NotEmptyStringConstraintValidator.class);

    private final RequiredAndNotEmptyStringConstraintValidator requiredAndNotEmptyStringConstraintValidator =
            getStatelessValidator(RequiredAndNotEmptyStringConstraintValidator.class);

    @Override
    public void validateNonNull(final GrandParent model,
                                final ModelType httpModelType,
                                final String name) {
        notEmptyStringConstraintValidator.validate(model.grandVar, HttpModelType.PATH, "grandVar");

        requiredAndNotEmptyStringConstraintValidator.validate(model.grandHeader, HttpModelType.HEADER, "grandHeader");

        requiredAndNotEmptyStringConstraintValidator.validate(model.grandParameter, HttpModelType.PARAMETER, "grandParameter");
    }
}
