package io.rxmicro.examples.rest.controller.extendable.model.request.path_vars_only.parent_model_without_fields.child;

import io.rxmicro.examples.rest.controller.extendable.model.request.path_vars_only.parent_model_without_fields.grand.$$GrandParentModelReader;
import io.rxmicro.http.QueryParams;
import io.rxmicro.rest.model.HttpModelType;
import io.rxmicro.rest.model.PathVariableMapping;
import io.rxmicro.rest.server.detail.component.ModelReader;
import io.rxmicro.rest.server.detail.model.HttpRequest;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$ChildModelReader extends ModelReader<Child> {

    private final $$GrandParentModelReader parentReader =
            new $$GrandParentModelReader();

    @Override
    public Child read(final PathVariableMapping pathVariableMapping,
                      final HttpRequest request,
                      final boolean readParametersFromBody) {
        final Child model = new Child();
        readPrimitivesToModel(pathVariableMapping, request, QueryParams.of(), model, readParametersFromBody);
        return model;
    }

    public void readPrimitivesToModel(final PathVariableMapping pathVariableMapping,
                                      final HttpRequest request,
                                      final QueryParams params,
                                      final Child model,
                                      final boolean readParametersFromBody) {
        parentReader.readPrimitivesToModel(pathVariableMapping, request, params, model, readParametersFromBody);
        model.childVar = toString(pathVariableMapping.getValue("childVar"), HttpModelType.PATH, "childVar");
    }
}
