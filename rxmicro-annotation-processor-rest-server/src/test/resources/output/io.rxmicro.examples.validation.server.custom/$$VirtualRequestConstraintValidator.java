package io.rxmicro.examples.validation.server.custom;

import io.rxmicro.model.ModelType;
import io.rxmicro.rest.model.HttpModelType;
import io.rxmicro.validation.ConstraintValidator;
import io.rxmicro.validation.validator.RequiredConstraintValidator;

import static io.rxmicro.validation.detail.StatelessValidators.getStatelessValidator;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$VirtualRequestConstraintValidator implements ConstraintValidator<$$VirtualRequest> {

    private final RequiredConstraintValidator requiredConstraintValidator =
            getStatelessValidator(RequiredConstraintValidator.class);

    private final io.rxmicro.examples.validation.server.custom.ExpectedZeroConstraintValidator valueExpectedZeroExpectedZeroConstraintValidator =
            new io.rxmicro.examples.validation.server.custom.ExpectedZeroConstraintValidator();

    @Override
    public void validateNonNull(final $$VirtualRequest model,
                                final ModelType httpModelType,
                                final String name) {
        requiredConstraintValidator.validate(model.value, HttpModelType.PARAMETER, "value");
        valueExpectedZeroExpectedZeroConstraintValidator.validate(model.value, HttpModelType.PARAMETER, "value");
    }
}
