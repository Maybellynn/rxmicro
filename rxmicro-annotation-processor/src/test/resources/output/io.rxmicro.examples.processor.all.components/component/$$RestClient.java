package io.rxmicro.examples.processor.all.components.component;

import io.rxmicro.examples.processor.all.components.model.$$AccountClientModelReader;
import io.rxmicro.examples.processor.all.components.model.Account;
import io.rxmicro.rest.client.RestClientConfig;
import io.rxmicro.rest.client.detail.AbstractRestClient;
import io.rxmicro.rest.client.detail.HttpClient;
import io.rxmicro.rest.client.detail.HttpResponse;

import java.util.concurrent.CompletableFuture;

import static io.rxmicro.rest.client.detail.ErrorResponseCheckerHelper.throwExceptionIfNotSuccess;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$RestClient extends AbstractRestClient implements RestClient {

    private final $$AccountClientModelReader accountClientModelReader =
            new $$AccountClientModelReader();

    private final HttpClient client;

    private final RestClientConfig config;

    public $$RestClient(final HttpClient client,
                        final RestClientConfig config) {
        this.client = client;
        this.config = config;
    }

    @Override
    public CompletableFuture<Account> get() {
        final CompletableFuture<HttpResponse> response = client
                .sendAsync("GET", "/", EMPTY_HEADERS)
                .handle(throwExceptionIfNotSuccess());
        return response
                .thenApply(resp -> accountClientModelReader.readSingle(resp));
    }
}
