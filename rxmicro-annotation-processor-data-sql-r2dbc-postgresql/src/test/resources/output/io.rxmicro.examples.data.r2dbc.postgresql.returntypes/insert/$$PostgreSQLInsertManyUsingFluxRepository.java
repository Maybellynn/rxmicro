package io.rxmicro.examples.data.r2dbc.postgresql.returntypes.insert;

import io.r2dbc.pool.ConnectionPool;
import io.rxmicro.data.sql.model.EntityFieldList;
import io.rxmicro.data.sql.model.EntityFieldMap;
import io.rxmicro.data.sql.r2dbc.postgresql.detail.AbstractPostgreSQLRepository;
import io.rxmicro.examples.data.r2dbc.postgresql.returntypes.model.$$AccountEntityFromR2DBCSQLDBConverter;
import io.rxmicro.examples.data.r2dbc.postgresql.returntypes.model.Account;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

/**
 * Generated by rxmicro annotation processor
 *
 * @link http://rxmicro.io
 */
public final class $$PostgreSQLInsertManyUsingFluxRepository extends AbstractPostgreSQLRepository implements InsertManyUsingFluxRepository {

    private final $$AccountEntityFromR2DBCSQLDBConverter accountEntityFromR2DBCSQLDBConverter =
            new $$AccountEntityFromR2DBCSQLDBConverter();

    private final ConnectionPool pool;

    public $$PostgreSQLInsertManyUsingFluxRepository(final ConnectionPool pool) {
        super(InsertManyUsingFluxRepository.class);
        this.pool = pool;
    }

    @Override
    public Flux<Account> insertAll01() {
        // Original SQL statement:  'INSERT INTO ${table} SELECT * FROM dump RETURNING *'
        final String generatedSQL = "INSERT INTO account SELECT * FROM dump RETURNING id, first_name, last_name";
        final Account entity = new Account();
        return pool.create()
                .flatMapMany(c -> executeStatement(c, generatedSQL)
                        .flatMapMany(r -> Flux.from(r.map((row, meta) -> accountEntityFromR2DBCSQLDBConverter.setIdFirst_nameLast_name(entity, row, meta))))
                        .onErrorResume(e -> close(c)
                                .then(Mono.error(e)))
                        .concatWith(close(c)
                                .then(Mono.empty()))
                );
    }

    @Override
    public Flux<EntityFieldMap> insertAll02() {
        // Original SQL statement:  'INSERT INTO ${table} SELECT * FROM dump RETURNING first_name, last_name'
        final String generatedSQL = "INSERT INTO account SELECT * FROM dump RETURNING first_name, last_name";
        return pool.create()
                .flatMapMany(c -> executeStatement(c, generatedSQL)
                        .flatMapMany(r -> Flux.from(r.map(toEntityFieldMap())))
                        .onErrorResume(e -> close(c)
                                .then(Mono.error(e)))
                        .concatWith(close(c)
                                .then(Mono.empty()))
                );
    }

    @Override
    public Flux<EntityFieldList> insertAll03() {
        // Original SQL statement:  'INSERT INTO ${table} SELECT * FROM dump RETURNING first_name, last_name'
        final String generatedSQL = "INSERT INTO account SELECT * FROM dump RETURNING first_name, last_name";
        return pool.create()
                .flatMapMany(c -> executeStatement(c, generatedSQL)
                        .flatMapMany(r -> Flux.from(r.map(toEntityFieldList())))
                        .onErrorResume(e -> close(c)
                                .then(Mono.error(e)))
                        .concatWith(close(c)
                                .then(Mono.empty()))
                );
    }
}
