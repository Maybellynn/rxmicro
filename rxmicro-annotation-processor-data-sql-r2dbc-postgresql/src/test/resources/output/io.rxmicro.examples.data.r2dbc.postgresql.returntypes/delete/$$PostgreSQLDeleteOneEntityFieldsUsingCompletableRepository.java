package io.rxmicro.examples.data.r2dbc.postgresql.returntypes.delete;

import io.r2dbc.pool.ConnectionPool;
import io.reactivex.rxjava3.core.Completable;
import io.rxmicro.data.sql.r2dbc.postgresql.detail.AbstractPostgreSQLRepository;
import reactor.core.publisher.Mono;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$PostgreSQLDeleteOneEntityFieldsUsingCompletableRepository extends AbstractPostgreSQLRepository implements DeleteOneEntityFieldsUsingCompletableRepository {

    public $$PostgreSQLDeleteOneEntityFieldsUsingCompletableRepository(final ConnectionPool pool) {
        super(DeleteOneEntityFieldsUsingCompletableRepository.class, pool);
    }

    @Override
    public Completable delete01(final Long id) {
        // Original SQL statement:  'DELETE FROM ${table} WHERE id = ?'
        final String generatedSQL = "DELETE FROM account WHERE id = $1";
        return Completable.fromPublisher(
                this.connectionFactory.create()
                        .flatMap(c -> executeStatement(c, generatedSQL, id)
                                .flatMap(r -> Mono.from(r.getRowsUpdated()))
                                .delayUntil(s -> close(c))
                                .onErrorResume(createCloseThenReturnErrorFallback(c))
                        )
        );
    }
}
