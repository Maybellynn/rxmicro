package io.rxmicro.examples.data.r2dbc.postgresql.model.fields.direct.model;

import io.r2dbc.spi.Row;
import io.r2dbc.spi.RowMetadata;
import io.rxmicro.data.sql.r2dbc.detail.EntityFromR2DBCSQLDBConverter;
import io.rxmicro.examples.data.r2dbc.postgresql.model.fields.Status;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.net.InetAddress;
import java.time.Instant;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.OffsetDateTime;
import java.time.ZonedDateTime;
import java.util.UUID;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$EntityEntityFromR2DBCSQLDBConverter extends EntityFromR2DBCSQLDBConverter<Row, RowMetadata, Entity> {

    public Entity fromDB(final Row dbRow,
                         final RowMetadata metadata) {
        final Entity model = new Entity();
        model.id = dbRow.get(0, Long.class);
        model.status = dbRow.get(1, Status.class);
        model.aBoolean = dbRow.get(2, Boolean.class);
        model.aByte = dbRow.get(3, Byte.class);
        model.aShort = dbRow.get(4, Short.class);
        model.aInteger = dbRow.get(5, Integer.class);
        model.aLong = dbRow.get(6, Long.class);
        model.bigInteger = dbRow.get(7, BigInteger.class);
        model.aFloat = dbRow.get(8, Float.class);
        model.aDouble = dbRow.get(9, Double.class);
        model.bigDecimal = dbRow.get(10, BigDecimal.class);
        model.character = dbRow.get(11, Character.class);
        model.string = dbRow.get(12, String.class);
        model.instant = dbRow.get(13, Instant.class);
        model.localTime = dbRow.get(14, LocalTime.class);
        model.localDate = dbRow.get(15, LocalDate.class);
        model.localDateTime = dbRow.get(16, LocalDateTime.class);
        model.offsetDateTime = dbRow.get(17, OffsetDateTime.class);
        model.zonedDateTime = dbRow.get(18, ZonedDateTime.class);
        model.inetAddress = dbRow.get(19, InetAddress.class);
        model.uuid = dbRow.get(20, UUID.class);
        return model;
    }
}
