package io.rxmicro.examples.data.r2dbc.postgresql.model.fields.reflection.model;

import io.r2dbc.spi.Row;
import io.rxmicro.data.sql.r2dbc.detail.EntityToR2DBCSQLDBConverter;

import static rxmicro.$$Reflections.getFieldValue;

/**
 * Generated by rxmicro annotation processor
 *
 * @link http://rxmicro.io
 */
public final class $$EntityEntityToR2DBCSQLDBConverter extends EntityToR2DBCSQLDBConverter<Entity, Row> {

    public Object[] getInsertParams(final Entity entity) {
        return new Object[]{
                ((Enum<?>) getFieldValue(entity, "status")).name(),
                getFieldValue(entity, "aBoolean"),
                getFieldValue(entity, "aByte"),
                getFieldValue(entity, "aShort"),
                getFieldValue(entity, "aInteger"),
                getFieldValue(entity, "aLong"),
                getFieldValue(entity, "bigInteger"),
                getFieldValue(entity, "aFloat"),
                getFieldValue(entity, "aDouble"),
                getFieldValue(entity, "bigDecimal"),
                getFieldValue(entity, "character"),
                getFieldValue(entity, "string"),
                getFieldValue(entity, "instant"),
                getFieldValue(entity, "localTime"),
                getFieldValue(entity, "localDate"),
                getFieldValue(entity, "localDateTime"),
                getFieldValue(entity, "offsetDateTime"),
                getFieldValue(entity, "zonedDateTime"),
                getFieldValue(entity, "inetAddress"),
                getFieldValue(entity, "uuid")
        };
    }

    public Object[] getUpdateParams(final Entity entity) {
        return new Object[]{
                ((Enum<?>) getFieldValue(entity, "status")).name(),
                getFieldValue(entity, "aBoolean"),
                getFieldValue(entity, "aByte"),
                getFieldValue(entity, "aShort"),
                getFieldValue(entity, "aInteger"),
                getFieldValue(entity, "aLong"),
                getFieldValue(entity, "bigInteger"),
                getFieldValue(entity, "aFloat"),
                getFieldValue(entity, "aDouble"),
                getFieldValue(entity, "bigDecimal"),
                getFieldValue(entity, "character"),
                getFieldValue(entity, "string"),
                getFieldValue(entity, "instant"),
                getFieldValue(entity, "localTime"),
                getFieldValue(entity, "localDate"),
                getFieldValue(entity, "localDateTime"),
                getFieldValue(entity, "offsetDateTime"),
                getFieldValue(entity, "zonedDateTime"),
                getFieldValue(entity, "inetAddress"),
                getFieldValue(entity, "uuid"),
                // primary key(s):
                getFieldValue(entity, "id")
        };
    }

    public Object getPrimaryKey(final Entity entity) {
        return getFieldValue(entity, "id");
    }
}
