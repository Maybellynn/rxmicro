<#include "../postgresql-lib.javaftl">
<#-- -------------------------------------------------------------------------------------------------------- -->
<@defineGeneratedSQL SHOW_ORIGINAL_QUERY=SHOW_ORIGINAL_QUERY SQL=SQL/>
<#-- -------------------------------------------------------------------------------------------------------- -->
<#-- -------------------------------------------------------------------------------------------------------- -->
<#-- -------------------------------------------------------------------------------------------------------- -->
<#if TRANSACTION??>
<#assign CONNECTION_PROVIDER>extractConnectionFrom(${TRANSACTION})</#assign>
<#else>
<#assign CONNECTION_PROVIDER>this.connectionFactory.create(${CONNECTION_CREATE_PARAM})</#assign>
</#if>
<#-- -------------------------------------------------------------------------------------------------------- -->
<#-- -------------------------------------------------------------------------------------------------------- -->
<#-- -------------------------------------------------------------------------------------------------------- -->
<#if ENTITY??>
final Object[] updateParams = ${ENTITY_TO_DB_CONVERTER}.getUpdateParams(${ENTITY});
final Class<?>[] updateParamTypes = ${ENTITY_TO_DB_CONVERTER}.getUpdateParamTypes();
<#assign SQL_PARAMS>, updateParams, updateParamTypes</#assign>
<#elseif SQL.bindParams?has_content>
final Object[] updateParams = {<#list SQL.bindParams as ARG>${ARG.name}<#if ARG?has_next>, </#if></#list>};
final Class<?>[] updateParamTypes = {<#list SQL.bindParams as ARG>${ARG.simpleTypeName}.class<#if ARG?has_next>, </#if></#list>};
<#assign SQL_PARAMS>, updateParams, updateParamTypes</#assign>
<#else>
<#assign SQL_PARAMS></#assign>
</#if>
<#-- -------------------------------------------------------------------------------------------------------- -->
<#-- -------------------------------------------------------------------------------------------------------- -->
<#-- -------------------------------------------------------------------------------------------------------- -->
<#if RETURN_ENTITY_FIELD_MAP>
    <#assign RESULT_CONVERTER>toEntityFieldMap()</#assign>
<#elseif RETURN_ENTITY_FIELD_LIST>
    <#assign RESULT_CONVERTER>toEntityFieldList()</#assign>
<#elseif ENTITY_FROM_DB_CONVERTER??>
    <#-- ---------------------------------------------------------------------------------------------------- -->
    <#if ENTITY_RESULT_DIFFERS_FROM_ENTITY_PARAM>
final ${ENTITY_CLASS} resultEntity = new ${ENTITY_CLASS}();
    <#assign ENTITY>resultEntity</#assign>
    </#if>
    <#-- ---------------------------------------------------------------------------------------------------- -->
    <#assign RESULT_CONVERTER>(row, meta) -> ${ENTITY_FROM_DB_CONVERTER}.${ENTITY_CONVERTER_METHOD}(${ENTITY}, row, meta)</#assign>
</#if>
<#-- -------------------------------------------------------------------------------------------------------- -->
<#-- -------------------------------------------------------------------------------------------------------- -->
<#-- -------------------------------------------------------------------------------------------------------- -->
<@returnEntityResult    RETURN=RETURN
                        CONNECTION_PROVIDER=CONNECTION_PROVIDER
                        SQL_PARAMS=SQL_PARAMS
                        RESULT_CONVERTER=RESULT_CONVERTER
                        CLOSE_CONNECTION=!TRANSACTION?? />