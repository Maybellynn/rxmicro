#
# Copyright (c) 2020. https://rxmicro.io
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Github Actions Tutorials:
#
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
# https://help.github.com/en/actions/reference/events-that-trigger-workflows
#
# https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
# https://help.github.com/en/actions/reference/software-installed-on-github-hosted-runners

name: Verify and Publish on Release

# Global settings
env:
  DEFAULT_JDK_LTS_VERSION: '11'
  LAST_JDK_VERSION: '15'
  GRAAL_VM_VERSION: '20.3.0'

on:
  release:
    types: [created]

jobs:
  # -----------------------------------------------------------------------------------------------------
  # --- Verify Code Quality via Spotbugs, PMD, Checkstyle and Javadoc Tool ------------------------------
  # ------------------ https://spotbugs.github.io/ ------------------------------------------------------
  # ------------------ https://pmd.github.io/ -----------------------------------------------------------
  # ------------------ https://checkstyle.sourceforge.io/ -----------------------------------------------
  # -----------------------------------------------------------------------------------------------------
  verify-using-profiles:
    name: Verify using '${{ matrix.profile }}' profile
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile:
          - spotbugs
          - pmd
          - checkstyle
          # 'release' profile verifies generated javadocs
          - release
      fail-fast: false

    steps:
      # https://github.com/actions/checkout/blob/main/README.md
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/main/README.md
      - name: Setup m2 local repo
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: rxmicro-m2-local-${{ runner.os }}-repo

      # https://github.com/actions/setup-java/blob/main/README.md
      - name: Setup JDK ${{ env.DEFAULT_JDK_LTS_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.DEFAULT_JDK_LTS_VERSION }}

      - name: Verify
        run: mvn --fail-at-end -DskipTests -P ${{ matrix.profile }} package
  # -----------------------------------------------------------------------------------------------------
  # ------------- Run Unit tests on Linux, Windows and MacOS with all supported JDK versions ------------
  # -----------------------------------------------------------------------------------------------------
  test-on-linux-windows-and-macos:
    name: Test on JDK-${{ matrix.jdk }}/${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        jdk: ['11', '12', '13', '14', '15']
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false

    steps:
      # https://github.com/actions/checkout/blob/main/README.md
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/main/README.md
      - name: Setup m2 local repo
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: rxmicro-m2-local-${{ runner.os }}-repo

      # https://github.com/actions/setup-java/blob/main/README.md
      - name: Setup JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}

      - name: Run all tests
        run: mvn --fail-at-end verify
  # -----------------------------------------------------------------------------------------------------
  # ------------- Install the latest version of the RxMicro framework to m2 local cache -----------------
  # -----------------------------------------------------------------------------------------------------
  prepare-examples-verification:
    name: Prepare to verify examples
    runs-on: ubuntu-latest

    steps:
      # https://github.com/actions/checkout/blob/main/README.md
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/main/README.md
      - name: Setup m2 local repo
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: rxmicro-m2-local-${{ runner.os }}-repo

      # https://github.com/actions/setup-java/blob/main/README.md
      - name: Setup JDK ${{ env.DEFAULT_JDK_LTS_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.DEFAULT_JDK_LTS_VERSION }}

      - name: Prepare
        run: mvn -DskipTests install

      # https://github.com/actions/upload-artifact/blob/main/README.md
      - name: Save latest rxmicro artefacts
        uses: actions/upload-artifact@v2
        with:
          name: latest-rxmicro-release-version
          path: ~/.m2/repository/io/rxmicro/
          if-no-files-found: error
          retention-days: 1

      # m2 local repo must not contain the snapshot versions!
      - name: Remove latest rxmicro artefacts
        run: rm -rf ~/.m2/repository/io/rxmicro/

  # -----------------------------------------------------------------------------------------------------
  # ------------- Verify examples using the latest RxMicro framework ------------------------------------
  # ------------- https://github.com/rxmicro/rxmicro-usage/tree/master/examples -------------------------
  # -----------------------------------------------------------------------------------------------------
  verify-examples:
    name: Verify ${{ matrix.group }} examples
    runs-on: ubuntu-latest
    needs: prepare-examples-verification
    strategy:
      matrix:
        group:
          - group-cdi
          - group-common
          - group-data-mongo
          - group-data-r2dbc-postgresql
          - group-documentation-asciidoctor
          - group-monitoring
          - group-processor
          - group-rest-client
          - group-rest-controller
          - group-testing-dbunit
          - group-testing-junit
          - group-unnamed-module
          - group-validation
          - quick-start
        install-graalvm: [false]
        include:
          - group: group-graalvm
            install-graalvm: true
      fail-fast: false
    steps:
      # https://github.com/actions/checkout/blob/main/README.md
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/main/README.md
      - name: Setup m2 local repo
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: rxmicro-m2-local-${{ runner.os }}-repo

      - name: Checkout examples
        run: git clone https://github.com/rxmicro/rxmicro-usage

      # https://github.com/actions/setup-java/blob/main/README.md
      - name: Setup JDK ${{ env.DEFAULT_JDK_LTS_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.DEFAULT_JDK_LTS_VERSION }}

      # https://www.graalvm.org/downloads/
      # https://www.graalvm.org/docs/getting-started/#native-images
      - name: Install Graalvm and Native Image
        if: ${{ matrix.install-graalvm }}
        run: |
          GRAAL_VM_BUILD=graalvm-ce-java11-linux-amd64-${{env.GRAAL_VM_VERSION}}
          DOWNLOAD_LINK=https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${{env.GRAAL_VM_VERSION}}/${GRAAL_VM_BUILD}.tar.gz
          mkdir ~/GraalVM
          wget -P ~/GraalVM $DOWNLOAD_LINK
          tar --strip-components=1 -xvzf ~/GraalVM/${GRAAL_VM_BUILD}.tar.gz -C ~/GraalVM
          rm -f ~/GraalVM/${GRAAL_VM_BUILD}.tar.gz
          ~/GraalVM/bin/gu install native-image

      # https://github.com/actions/download-artifact/blob/main/README.md
      - name: Download latest rxmicro artifacts
        uses: actions/download-artifact@v2
        with:
          name: latest-rxmicro-release-version
          path: ~/.m2/repository/io/rxmicro/

      # Print dir tree with file size for debug purposes
      - name: Show downloaded rxmicro artifacts
        run: |
          sudo apt install tree
          tree -hD ~/.m2/repository/io/rxmicro/

      - name: Verify ${{ matrix.group }}
        run: |
          LATEST_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          GRAALVM_HOME=~/GraalVM
          cd rxmicro-usage/examples/${{ matrix.group }}
          mvn --fail-at-end -Drxmicro.version=$LATEST_VERSION verify

      # m2 local repo must not contain the snapshot versions!
      - name: Remove latest rxmicro artefacts
        run: rm -rf ~/.m2/repository/io/rxmicro/
  # -----------------------------------------------------------------------------------------------------
  # ------------- Update User Guide (User Guide must use the latest RxMicro framework version) ----------
  # -----------------------------------------------------------------------------------------------------
  update-user-guide:
    name: Update User Guide
    runs-on: ubuntu-latest
    needs: prepare-examples-verification

    steps:
      # https://github.com/actions/cache/blob/main/README.md
      - name: Setup Maven Local Repository
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: rxmicro-doc-m2-local-${{ runner.os }}-repo

      # https://github.com/actions/setup-java/blob/main/README.md
      - name: Setup JDK ${{ env.DEFAULT_JDK_LTS_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.DEFAULT_JDK_LTS_VERSION }}

      - name: Checkout repositories
        run: |
          git clone https://github.com/rxmicro/rxmicro-usage
          git clone https://github.com/rxmicro/rxmicro

      # https://github.com/actions/download-artifact/blob/main/README.md
      - name: Download latest rxmicro artifacts
        uses: actions/download-artifact@v2
        with:
          name: latest-rxmicro-release-version
          path: ~/.m2/repository/io/rxmicro/

      - name: Recompile Examples of REST-based microservice documentations
        run: |
          cd rxmicro/
          LATEST_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          cd ../rxmicro-usage/examples/group-documentation-asciidoctor
          mvn -DskipTests -Drxmicro.version=$LATEST_VERSION -B compile --file documentation-asciidoctor-custom-sections/pom.xml
          mvn -DskipTests -Drxmicro.version=$LATEST_VERSION -B compile --file documentation-asciidoctor-echo/pom.xml
          mvn -DskipTests -Drxmicro.version=$LATEST_VERSION -B compile --file documentation-asciidoctor-errors/pom.xml
          mvn -DskipTests -Drxmicro.version=$LATEST_VERSION -B compile --file documentation-asciidoctor-quick-start/pom.xml
          mvn -DskipTests -Drxmicro.version=$LATEST_VERSION -B compile --file documentation-asciidoctor-validation/pom.xml
          mvn -DskipTests -Drxmicro.version=$LATEST_VERSION -B compile --file documentation-asciidoctor-metadata-annotations/pom.xml
          mvn -DskipTests -Drxmicro.version=$LATEST_VERSION -B compile --file documentation-asciidoctor-metadata-pomxml/pom.xml

      - name: Build the Last Version of RxMicro User Guide
        run: |
          cd rxmicro/
          LATEST_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          RELEASE_VERSION=$(echo $LATEST_VERSION | sed 's/-SNAPSHOT//g')
          cd ../
          cd rxmicro-usage/documentation/
          mvn -Drxmicro.version=$RELEASE_VERSION -B verify --file pom.xml

      - name: Clone the `docs` Repository
        run: git clone https://github.com/rxmicro/docs

      - name: Update the `docs` Repository
        run: |
          rm -R docs/latest/
          mkdir docs/latest/
          mv -v rxmicro-usage/documentation/target/generated-docs/images docs/latest
          mv -v rxmicro-usage/documentation/target/generated-docs/project-documentation-examples docs/latest
          mv -v rxmicro-usage/documentation/target/generated-docs/user-guide docs/latest
          mv -v rxmicro-usage/documentation/target/generated-docs/user-guide.html docs/latest
          mv -v rxmicro-usage/documentation/target/generated-docs/user-guide.pdf docs/latest
          mkdir docs/latest/styles/
          mv -v rxmicro-usage/documentation/target/generated-docs/styles/rxmicro-doc.min.css docs/latest/styles/

      - name: Commit and Push Changes to the `docs` Repository
        run: |
          cd docs
          git config user.email "rxmicro.io@gmail.com"
          git config user.name "rxmicro"
          git add --all
          git commit --amend -m "Update user guide. Commit#${{ github.sha }}"
          git remote set-url origin https://rxmicro:${{ secrets.AUTO_UPDATE_RX_MICRO_IO_DOC_ACCESS_TOKEN }}@github.com/rxmicro/docs.git
          git push --force origin master
  # -----------------------------------------------------------------------------------------------------
  # ------------- Publish to Maven Central --------------------------------------------------------------
  # -----------------------------------------------------------------------------------------------------
  publish-to-maven-central:
    name: Publish to Maven Central
    runs-on: ubuntu-latest
    needs:
      - verify-using-profiles
      - test-on-linux-windows-and-macos
      - update-user-guide

    steps:
      # https://github.com/actions/checkout/blob/main/README.md
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/main/README.md
      - name: Setup m2 local repo
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: rxmicro-m2-local-${{ runner.os }}-repo

      # https://github.com/actions/setup-java/blob/main/README.md
      - name: Setup JDK ${{ env.DEFAULT_JDK_LTS_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.DEFAULT_JDK_LTS_VERSION }}

      - name: Prepare deploy
        run: |
          cp .mvn/settings.xml ~/.m2/settings.xml
          sed -i 's/OSSRH_PASSWORD/${{ secrets.OSSRH_PASSWORD}}/' ~/.m2/settings.xml
          sed -i 's/OSSRH_PASSPHRASE/${{ secrets.OSSRH_PASSPHRASE}}/' ~/.m2/settings.xml
          echo '${{secrets.SIGN_KEY}}' > rxmicro.txt
          gpg --quiet --batch --yes --passphrase="${{ secrets.OSSRH_PASSPHRASE}}" --allow-secret-key-import --import rxmicro.txt

      - name: Update version of the RxMicro framework
        run: |
          LATEST_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          RELEASE_VERSION=$(echo $LATEST_VERSION | sed 's/-SNAPSHOT//g')
          mvn versions:set -DnewVersion=$RELEASE_VERSION

      - name: Deploy to OSSRH
        run: mvn -P release -DskipTests deploy
