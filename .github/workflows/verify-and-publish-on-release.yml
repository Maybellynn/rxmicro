#
# Copyright (c) 2020. https://rxmicro.io
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Github Actions Tutorials:
#
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
# https://help.github.com/en/actions/reference/events-that-trigger-workflows
#
# https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
# https://help.github.com/en/actions/reference/software-installed-on-github-hosted-runners

name: Verify and Publish on Release

on:
  release:
    types: [created]

jobs:

  #
  # ------------- Run Unit tests on Linux with all supported JDK versions -------------
  #

  test-on-linux:
    name: Test on JDK-${{ matrix.jdk }}/${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        jdk: ['11', '12', '13', '14', '15']
        os: [ubuntu-latest]
      fail-fast: false

    steps:
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      - name: Setup m2 local repo
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: rxmicro-maven-${{ runner.os }}-cache

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '${{ matrix.jdk }}'

      - name: Run all tests
        run: mvn --fail-at-end test

  #
  # ------------- Verify Code Quality via Spotbugs Tool -------------
  # ------------------ https://spotbugs.github.io/ ------------------
  #

  verify-via-spotbugs:
    name: Verify via Spotbugs Tool
    runs-on: ubuntu-latest

    steps:
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      - name: Setup m2 local repo
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: rxmicro-maven-${{ runner.os }}-cache

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Verify
        run: mvn --fail-at-end -DskipTests -P spotbugs verify

  #
  # ------------- Verify Code Quality via PMD Tool -------------
  # ------------------ https://pmd.github.io/ ------------------
  #

  verify-via-pmd:
    name: Verify via PMD Tool
    runs-on: ubuntu-latest

    steps:
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      - name: Setup m2 local repo
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: rxmicro-maven-${{ runner.os }}-cache

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Verify
        run: mvn --fail-at-end -DskipTests -P pmd verify

  #
  # ------------- Verify Code Quality via Checkstyle Tool -------------
  # --------------- https://checkstyle.sourceforge.io/ ----------------
  #

  verify-via-checkstyle:
    name: Verify via Checkstyle Tool
    runs-on: ubuntu-latest

    steps:
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      - name: Setup m2 local repo
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: rxmicro-maven-${{ runner.os }}-cache

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Verify
        run: mvn --fail-at-end -DskipTests -P checkstyle verify

  #
  # ----------------- Verify RxMicro Javadocs  -----------------
  #

  verify-javadoc:
    name: Verify javadoc
    runs-on: ubuntu-latest

    steps:
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      - name: Setup m2 local repo
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: rxmicro-maven-${{ runner.os }}-cache

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Verify
        run: mvn --fail-at-end -DskipTests -P release package

  #
  # ------------- Run Unit tests on Windows and MacOS with all supported JDK versions -------------
  #

  test-on-windows-and-macos:
    name: Test on JDK-${{ matrix.jdk }}/${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: [test-on-linux, verify-via-spotbugs, verify-via-pmd, verify-via-checkstyle, verify-javadoc]
    strategy:
      matrix:
        jdk: ['11', '12', '13', '14', '15']
        os: [windows-latest, macOS-latest]
      fail-fast: false

    steps:
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      - name: Setup m2 local repo
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: rxmicro-maven-${{ runner.os }}-cache

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Run all tests
        run: mvn --fail-at-end test

  #
  # ------------- Verify Examples and Upload Coverage Report -------------
  #

  verify-examples-and-upload-jacoco-report:
    name: Verify Examples and Upload Coverage Report
    runs-on: ubuntu-latest
    needs: test-on-windows-and-macos

    steps:
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      - name: Setup m2 local repo
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: rxmicro-maven-${{ runner.os }}-cache

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Resolve current version of the RxMicro framework
        run: |
          LATEST_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "RxMicro version is $LATEST_VERSION"

      - name: Install latest version of rxmicro
        run: mvn --fail-at-end install

      - name: Checkout rxmicro-usage
        run: git clone https://github.com/rxmicro/rxmicro-usage

      - name: Install Graalvm and Native Image
        run: |
          GRAAL_VM_VERSION=20.0.0
          GRAAL_VM_BUILD=graalvm-ce-java11-linux-amd64-${GRAAL_VM_VERSION}
          DOWNLOAD_LINK=https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAAL_VM_VERSION}/${GRAAL_VM_BUILD}.tar.gz
          mkdir ~/GraalVM
          wget -P ~/GraalVM $DOWNLOAD_LINK
          tar --strip-components=1 -xvzf ~/GraalVM/${GRAAL_VM_BUILD}.tar.gz -C ~/GraalVM
          rm -f ~/GraalVM/${GRAAL_VM_BUILD}.tar.gz
          ~/GraalVM/bin/gu install native-image

      - name: Verify examples
        run: |
          LATEST_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          GRAALVM_HOME=~/GraalVM
          cd rxmicro-usage/examples
          mvn --fail-at-end -Drxmicro.version=$LATEST_VERSION verify

      - name: Merge Jacoco Execs
        run: find ./rxmicro-usage/examples -name '*.exec' -exec /bin/bash -c 'count=0; for name in "$@"; do count=`expr $count + 1`; cp $name ./rxmicro-annotation-processor/target/jacoco-$count.exec; done' argv0 {} +

      - name: Create Jacoco Aggregate
        run: mvn site

      - name: Upload to codecov.io
        run: |
          export CODECOV_TOKEN="${{ secrets.CODECOV_IO_TOKEN }}"
          bash <(curl -s https://codecov.io/bash)

  #
  # ------------- Publish to Maven Central -------------
  #

  publish-to-maven-central:
    name: Publish to Maven Central
    runs-on: ubuntu-latest
    needs: verify-examples-and-upload-jacoco-report

    steps:
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      - name: Setup m2 local repo
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: rxmicro-maven-${{ runner.os }}-cache

      - name: Setup JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Prepare deploy
        run: |
          cp .mvn/settings.xml ~/.m2/settings.xml
          sed -i 's/OSSRH_PASSWORD/${{ secrets.OSSRH_PASSWORD}}/' ~/.m2/settings.xml
          sed -i 's/OSSRH_PASSPHRASE/${{ secrets.OSSRH_PASSPHRASE}}/' ~/.m2/settings.xml
          echo '${{secrets.SIGN_KEY}}' > rxmicro.txt
          gpg --quiet --batch --yes --passphrase="${{ secrets.OSSRH_PASSPHRASE}}" --allow-secret-key-import --import rxmicro.txt

      - name: Update version of the RxMicro framework
        run: |
          CURRENT_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          RELEASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-SNAPSHOT//g')
          mvn versions:set -DnewVersion=$RELEASE_VERSION

      - name: Deploy to OSSRH
        run: mvn -P release -DskipTests clean deploy
