#
# Copyright (c) 2020. https://rxmicro.io
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Github Actions Tutorials:
#
# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
# https://help.github.com/en/actions/reference/events-that-trigger-workflows
#
# https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
# https://help.github.com/en/actions/reference/software-installed-on-github-hosted-runners

name: Verify on Push

# Global settings
env:
  DEFAULT_JDK_LTS_VERSION: '11'
  GRAAL_VM_VERSION: '20.3.0'

on:
  push:
    branches: [ master ]
    paths:
      - 'rxmicro-*/src/main/java/**'
      - 'rxmicro-*/src/test/java/**'
      - '.github/workflows/verify-on-push.yml'
  pull_request:
    types: [assigned, opened, edited, reopened]
    paths:
      - 'rxmicro-*/src/main/java/**'
      - 'rxmicro-*/src/test/java/**'
      - '.github/workflows/verify-on-push.yml'

jobs:
  # -----------------------------------------------------------------------------------------------------
  # ------------- Run Unit tests on Linux and Windows with LTS and latest version of JDK ----------------
  # -----------------------------------------------------------------------------------------------------
  test-on-linux-and-windows:
    name: Test on JDK-${{ matrix.jdk }}/${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # LTS and latest JDK
        jdk: ['11', '15']
        os: [ubuntu-latest, windows-latest]
      fail-fast: false

    steps:
      # https://github.com/actions/checkout/blob/main/README.md
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/main/README.md
      - name: Setup m2 local repo
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: rxmicro-m2-local-${{ runner.os }}-repo

      # https://github.com/actions/setup-java/blob/main/README.md
      - name: Setup JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}

      - name: Run all tests
        run: mvn --fail-at-end verify
  # -----------------------------------------------------------------------------------------------------
  # --- Verify Code Quality via Spotbugs, PMD, Checkstyle and Javadoc Tool ------------------------------
  # ------------------ https://spotbugs.github.io/ ------------------------------------------------------
  # ------------------ https://pmd.github.io/ -----------------------------------------------------------
  # ------------------ https://checkstyle.sourceforge.io/ -----------------------------------------------
  # -----------------------------------------------------------------------------------------------------
  verify-using-profiles:
    name: Verify using '${{ matrix.profile }}' profile
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile:
          - spotbugs
          - pmd
          - checkstyle
          # 'release' profile verifies generated javadocs
          - release
      fail-fast: false

    steps:
      # https://github.com/actions/checkout/blob/main/README.md
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/main/README.md
      - name: Setup m2 local repo
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: rxmicro-m2-local-${{ runner.os }}-repo

      # https://github.com/actions/setup-java/blob/main/README.md
      - name: Setup JDK ${{ env.DEFAULT_JDK_LTS_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.DEFAULT_JDK_LTS_VERSION }}

      - name: Verify
        run: mvn --fail-at-end -DskipTests -P ${{ matrix.profile }} package
  # -----------------------------------------------------------------------------------------------------
  # ------------- Install the latest version of the RxMicro framework to m2 local cache -----------------
  # -----------------------------------------------------------------------------------------------------
  prepare-examples-verification:
    name: Prepare to verify examples
    runs-on: ubuntu-latest

    steps:
      # https://github.com/actions/checkout/blob/main/README.md
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/main/README.md
      - name: Setup m2 local repo
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: rxmicro-m2-local-${{ runner.os }}-repo

      # https://github.com/actions/setup-java/blob/main/README.md
      - name: Setup JDK ${{ env.DEFAULT_JDK_LTS_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.DEFAULT_JDK_LTS_VERSION }}

      - name: Prepare
        run: mvn -DskipTests install

      # https://github.com/actions/upload-artifact/blob/main/README.md
      - name: Save latest rxmicro artefacts
        uses: actions/upload-artifact@v2
        with:
          name: rxmicro-framework
          path: ~/.m2/repository/io/rxmicro/
          if-no-files-found: error
          retention-days: 1

      # m2 local repo must not contain the snapshot versions!
      - name: Remove latest rxmicro artefacts
        run: rm -rf ~/.m2/repository/io/rxmicro/

  # -----------------------------------------------------------------------------------------------------
  # ------------- Verify examples using the latest RxMicro framework ------------------------------------
  # ------------- https://github.com/rxmicro/rxmicro-usage/tree/master/examples -------------------------
  # -----------------------------------------------------------------------------------------------------
  verify-examples:
    name: Verify ${{ matrix.group }} examples
    runs-on: ubuntu-latest
    needs: prepare-examples-verification
    strategy:
      matrix:
        group:
          - group-cdi
          - group-common
          - group-data-mongo
          - group-data-r2dbc-postgresql
          - group-documentation-asciidoctor
          - group-monitoring
          - group-processor
          - group-rest-client
          - group-rest-controller
          - group-testing-dbunit
          - group-testing-junit
          - group-unnamed-module
          - group-validation
          - quick-start
        install-graalvm: [false]
        include:
          - group: group-graalvm
            install-graalvm: true
      fail-fast: false
    steps:
      # https://github.com/actions/checkout/blob/main/README.md
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/main/README.md
      - name: Setup m2 local repo
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: rxmicro-m2-local-${{ runner.os }}-repo

      - name: Checkout examples
        run: git clone https://github.com/rxmicro/rxmicro-usage

      # https://github.com/actions/setup-java/blob/main/README.md
      - name: Setup JDK ${{ env.DEFAULT_JDK_LTS_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.DEFAULT_JDK_LTS_VERSION }}

      # https://www.graalvm.org/downloads/
      # https://www.graalvm.org/docs/getting-started/#native-images
      - name: Install Graalvm and Native Image
        if: ${{ matrix.install-graalvm }}
        run: |
          GRAAL_VM_BUILD=graalvm-ce-java11-linux-amd64-${{env.GRAAL_VM_VERSION}}
          DOWNLOAD_LINK=https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${{env.GRAAL_VM_VERSION}}/${GRAAL_VM_BUILD}.tar.gz
          mkdir ~/GraalVM
          wget -P ~/GraalVM $DOWNLOAD_LINK
          tar --strip-components=1 -xvzf ~/GraalVM/${GRAAL_VM_BUILD}.tar.gz -C ~/GraalVM
          rm -f ~/GraalVM/${GRAAL_VM_BUILD}.tar.gz
          ~/GraalVM/bin/gu install native-image

      # https://github.com/actions/download-artifact/blob/main/README.md
      - name: Download latest rxmicro artifacts
        uses: actions/download-artifact@v2
        with:
          name: rxmicro-framework
          path: ~/.m2/repository/io/rxmicro/

      # Print dir tree with file size for debug purposes
      - name: Show downloaded rxmicro artifacts
        run: |
          sudo apt install tree
          tree -hD ~/.m2/repository/io/rxmicro/

      - name: Verify ${{ matrix.group }}
        run: |
          LATEST_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          GRAALVM_HOME=~/GraalVM
          cd rxmicro-usage/examples/${{ matrix.group }}
          mvn --fail-at-end -Drxmicro.version=$LATEST_VERSION verify

      - name: Collect jacoco metadata
        run: |
          mkdir -p ~/jacoco
          cp ./rxmicro-usage/tool/src/main/java/CopyJacocoExec.java CopyJacocoExec.java
          java CopyJacocoExec.java ./rxmicro-usage/examples/${{ matrix.group }} ~/jacoco

      # https://github.com/actions/upload-artifact/blob/main/README.md
      - name: Save collected jacoco metadata
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-${{ matrix.group }}-meta-data
          path: ~/jacoco
          if-no-files-found: ignore
          retention-days: 1

      # m2 local repo must not contain the snapshot versions!
      - name: Remove latest rxmicro artefacts
        run: rm -rf ~/.m2/repository/io/rxmicro/
  # -----------------------------------------------------------------------------------------------------
  # ------------- Merge jacoco.exec and Upload Coverage Report ------------------------------------------
  # -----------------------------------------------------------------------------------------------------
  upload-jacoco-report:
    name: Upload Coverage Report
    runs-on: ubuntu-latest
    needs:
      - verify-examples
      - test-on-linux-and-windows
      - verify-using-profiles

    steps:
      # https://github.com/actions/checkout/blob/main/README.md
      - name: Checkout rxmicro repo
        uses: actions/checkout@v2

      # https://github.com/actions/cache/blob/main/README.md
      - name: Setup m2 local repo
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: rxmicro-m2-local-${{ runner.os }}-repo

      # https://github.com/actions/setup-java/blob/main/README.md
      - name: Setup JDK ${{ env.DEFAULT_JDK_LTS_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.DEFAULT_JDK_LTS_VERSION }}

      - name: Prepare
        run: mvn install

      # https://github.com/actions/download-artifact/blob/main/README.md
      - name: Download all collected jacoco metadata
        uses: actions/download-artifact@v2
        with:
          path: ./rxmicro-annotation-processor/target/

      # Print dir tree with file size for debug purposes
      - name: Show downloaded rxmicro artifacts
        run: |
          sudo apt install tree
          tree -hD ./rxmicro-annotation-processor/target/

      - name: Create Jacoco Aggregate
        run: mvn site site:stage

      # https://docs.codecov.io/docs/about-the-codecov-bash-uploader
      - name: Upload to codecov.io
        run: |
          export CODECOV_TOKEN="${{ secrets.CODECOV_IO_TOKEN }}"
          bash <(curl -s https://codecov.io/bash)

      # m2 local repo must not contain the snapshot versions!
      - name: Remove latest rxmicro artefacts
        run: rm -rf ~/.m2/repository/io/rxmicro/

      # https://github.com/actions/upload-artifact/blob/main/README.md
      - name: Save latest rxmicro artefacts
        uses: actions/upload-artifact@v2
        with:
          name: staging-report-${{ github.sha }}
          path: ./target/staging
          if-no-files-found: error
