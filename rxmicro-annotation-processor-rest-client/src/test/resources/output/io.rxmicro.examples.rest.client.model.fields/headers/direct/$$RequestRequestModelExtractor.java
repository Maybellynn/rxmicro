package io.rxmicro.examples.rest.client.model.fields.headers.direct;

import io.rxmicro.examples.rest.client.model.fields.Status;
import io.rxmicro.rest.client.detail.HeaderBuilder;
import io.rxmicro.rest.client.detail.RequestModelExtractor;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$RequestRequestModelExtractor extends RequestModelExtractor<Request> {

    @Override
    public void extract(final Request model,
                        final HeaderBuilder headerBuilder) {
        headerBuilder.add("booleanParameter", model.booleanParameter);
        headerBuilder.add("byteParameter", model.byteParameter);
        headerBuilder.add("shortParameter", model.shortParameter);
        headerBuilder.add("intParameter", model.intParameter);
        headerBuilder.add("longParameter", model.longParameter);
        headerBuilder.add("bigIntParameter", model.bigIntParameter);
        headerBuilder.add("floatParameter", model.floatParameter);
        headerBuilder.add("doubleParameter", model.doubleParameter);
        headerBuilder.add("decimalParameter", model.decimalParameter);
        headerBuilder.add("charParameter", model.charParameter);
        headerBuilder.add("stringParameter", model.stringParameter);
        headerBuilder.add("instantParameter", model.instantParameter);
        headerBuilder.add("status", model.status);
        headerBuilder.add("booleanParameters", model.booleanParameters);
        headerBuilder.add("byteParameters", model.byteParameters);
        headerBuilder.add("shortParameters", model.shortParameters);
        headerBuilder.add("intParameters", model.intParameters);
        headerBuilder.add("longParameters", model.longParameters);
        headerBuilder.add("bigIntParameters", model.bigIntParameters);
        headerBuilder.add("floatParameters", model.floatParameters);
        headerBuilder.add("doubleParameters", model.doubleParameters);
        headerBuilder.add("decimalParameters", model.decimalParameters);
        headerBuilder.add("charParameters", model.charParameters);
        headerBuilder.add("stringParameters", model.stringParameters);
        headerBuilder.add("instantParameters", model.instantParameters);
        headerBuilder.add("statuses", model.statuses);
        for (final Status item : model.repeatingStatues) {
            headerBuilder.add("repeatingStatues", item);
        }
    }
}
