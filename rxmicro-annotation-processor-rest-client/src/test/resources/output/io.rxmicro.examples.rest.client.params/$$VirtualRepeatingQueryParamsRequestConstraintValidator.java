package io.rxmicro.examples.rest.client.params;

import io.rxmicro.model.ModelType;
import io.rxmicro.rest.model.HttpModelType;
import io.rxmicro.validation.ConstraintValidator;
import io.rxmicro.validation.validator.RequiredConstraintValidator;
import io.rxmicro.validation.validator.RequiredListConstraintValidator;

import static io.rxmicro.validation.detail.StatelessValidators.getStatelessValidator;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$VirtualRepeatingQueryParamsRequestConstraintValidator implements ConstraintValidator<$$VirtualRepeatingQueryParamsRequest> {

    private final RequiredListConstraintValidator requiredListConstraintValidator =
            getStatelessValidator(RequiredListConstraintValidator.class);

    private final RequiredConstraintValidator requiredConstraintValidator =
            getStatelessValidator(RequiredConstraintValidator.class);

    @Override
    public void validateNonNull(final $$VirtualRepeatingQueryParamsRequest model,
                                final ModelType httpModelType,
                                final String name) {
        requiredListConstraintValidator.validate(model.singleHeader, HttpModelType.PARAMETER, "single_header");
        requiredConstraintValidator.validateIterable(model.singleHeader, HttpModelType.PARAMETER, "single_header");

        requiredListConstraintValidator.validate(model.repeatingHeader, HttpModelType.PARAMETER, "repeating_header");
        requiredConstraintValidator.validateIterable(model.repeatingHeader, HttpModelType.PARAMETER, "repeating_header");
    }
}
