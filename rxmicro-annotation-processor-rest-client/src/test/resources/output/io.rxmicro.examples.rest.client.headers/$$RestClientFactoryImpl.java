package rxmicro;

import io.rxmicro.examples.rest.client.headers.$$ComplexStaticHeadersRestClient;
import io.rxmicro.examples.rest.client.headers.$$ListHeaderRestClient;
import io.rxmicro.examples.rest.client.headers.$$RepeatingHeadersRestClient;
import io.rxmicro.examples.rest.client.headers.$$SimpleUsageRestClient;
import io.rxmicro.examples.rest.client.headers.$$StaticHeadersRestClient;
import io.rxmicro.examples.rest.client.headers.ComplexStaticHeadersRestClient;
import io.rxmicro.examples.rest.client.headers.ListHeaderRestClient;
import io.rxmicro.examples.rest.client.headers.RepeatingHeadersRestClient;
import io.rxmicro.examples.rest.client.headers.SimpleUsageRestClient;
import io.rxmicro.examples.rest.client.headers.StaticHeadersRestClient;
import io.rxmicro.rest.client.RestClientConfig;
import io.rxmicro.rest.client.RestClientFactory;

import static io.rxmicro.rest.client.detail.RestClientImplFactory.createRestClient;

/**
 * Generated by {@code RxMicro Annotation Processor}
 */
public final class $$RestClientFactoryImpl extends RestClientFactory {

    static {
        $$EnvironmentCustomizer.customize();
    }

    public $$RestClientFactoryImpl() {
        register(ComplexStaticHeadersRestClient.class, () -> createRestClient(
                "rest-client",
                RestClientConfig.class,
                ComplexStaticHeadersRestClient.class,
                $$ComplexStaticHeadersRestClient::new)
        );
        register(ListHeaderRestClient.class, () -> createRestClient(
                "rest-client",
                RestClientConfig.class,
                ListHeaderRestClient.class,
                $$ListHeaderRestClient::new)
        );
        register(RepeatingHeadersRestClient.class, () -> createRestClient(
                "rest-client",
                RestClientConfig.class,
                RepeatingHeadersRestClient.class,
                $$RepeatingHeadersRestClient::new)
        );
        register(SimpleUsageRestClient.class, () -> createRestClient(
                "rest-client",
                RestClientConfig.class,
                SimpleUsageRestClient.class,
                $$SimpleUsageRestClient::new)
        );
        register(StaticHeadersRestClient.class, () -> createRestClient(
                "rest-client",
                RestClientConfig.class,
                StaticHeadersRestClient.class,
                $$StaticHeadersRestClient::new)
        );
    }
}
