package io.rxmicro.examples.rest.client.headers;

import io.rxmicro.examples.rest.client.headers.model.$$ListHeaderResponseModelReader;
import io.rxmicro.examples.rest.client.headers.model.ListHeaderResponse;
import io.rxmicro.http.client.ClientHttpResponse;
import io.rxmicro.http.client.HttpClient;
import io.rxmicro.http.client.HttpClientConfig;
import io.rxmicro.rest.client.detail.AbstractRestClient;

import java.util.concurrent.CompletableFuture;

import static io.rxmicro.rest.client.detail.ErrorResponseChecker.throwExceptionIfNotSuccess;

/**
 * Generated by rxmicro annotation processor
 *
 * @link http://rxmicro.io
 */
public final class $$ListHeaderRestClient extends AbstractRestClient implements ListHeaderRestClient {

    private final $$ListHeaderResponseModelReader listHeaderResponseModelReader =
            new $$ListHeaderResponseModelReader();

    private final HttpClient client;

    private final HttpClientConfig config;

    public $$ListHeaderRestClient(final HttpClient client,
                                  final HttpClientConfig config) {
        this.client = client;
        this.config = config;
    }

    @Override
    public CompletableFuture<ListHeaderResponse> get() {
        final CompletableFuture<ClientHttpResponse> response = client
                .sendAsync("GET", "/", EMPTY_HEADERS)
                .handle(throwExceptionIfNotSuccess());
        return response
                .thenApply(resp -> listHeaderResponseModelReader.readSingle(resp));
    }
}
