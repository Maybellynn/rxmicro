package io.rxmicro.examples.data.mongo.count.documents;

import com.mongodb.client.model.CountOptions;
import com.mongodb.reactivestreams.client.MongoDatabase;
import io.rxmicro.data.mongo.detail.AbstractMongoRepository;
import io.rxmicro.examples.data.mongo.count.documents.model.Role;
import org.bson.Document;
import org.reactivestreams.Publisher;
import reactor.core.publisher.Mono;

/**
 * Generated by rxmicro annotation processor
 *
 * @link https://rxmicro.io
 */
public final class $$MongoDataRepository extends AbstractMongoRepository implements DataRepository {

    public $$MongoDataRepository(final MongoDatabase mongoDatabase) {
        super(DataRepository.class, mongoDatabase.getCollection("account"));
    }

    @Override
    public Mono<Long> countDocuments() {
        final Publisher<Long> result = collection
                .countDocuments();
        return Mono.from(result);
    }

    @Override
    public Mono<Long> countDocuments(final Role role) {
        // query = "{role:?}
        final Document query = new Document("role", role);
        final Publisher<Long> result = collection
                .countDocuments(query, new CountOptions()
                        .limit(100)
                        .skip(0)
                );
        return Mono.from(result);
    }
}
