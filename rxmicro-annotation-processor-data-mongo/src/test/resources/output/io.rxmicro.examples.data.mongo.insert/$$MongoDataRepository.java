package io.rxmicro.examples.data.mongo.insert;

import com.mongodb.reactivestreams.client.MongoDatabase;
import io.rxmicro.data.mongo.detail.AbstractMongoRepository;
import io.rxmicro.examples.data.mongo.insert.model.$$AccountEntityToMongoDBConverter;
import io.rxmicro.examples.data.mongo.insert.model.Account;
import org.bson.Document;
import reactor.core.publisher.Mono;

/**
 * Generated by rxmicro annotation processor
 */
public final class $$MongoDataRepository extends AbstractMongoRepository implements DataRepository {

    private final $$AccountEntityToMongoDBConverter accountEntityToMongoDBConverter =
            new $$AccountEntityToMongoDBConverter();

    public $$MongoDataRepository(final MongoDatabase mongoDatabase) {
        super(DataRepository.class, mongoDatabase.getCollection("account"));
    }

    @Override
    public Mono<Void> insert(final Account account) {
        final Document document = accountEntityToMongoDBConverter.toDB(account, true);
        return Mono.from(collection.insertOne(document))
                .then()
                .doOnSuccess(a -> accountEntityToMongoDBConverter.setId(document, account));
    }
}
