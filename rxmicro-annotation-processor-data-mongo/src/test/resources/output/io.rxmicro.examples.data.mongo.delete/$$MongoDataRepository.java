package io.rxmicro.examples.data.mongo.delete;

import com.mongodb.client.result.DeleteResult;
import com.mongodb.reactivestreams.client.MongoDatabase;
import io.rxmicro.data.mongo.detail.AbstractMongoRepository;
import io.rxmicro.examples.data.mongo.delete.model.Role;
import org.bson.Document;
import org.reactivestreams.Publisher;
import reactor.core.publisher.Mono;

/**
 * Generated by rxmicro annotation processor
 *
 * @link https://rxmicro.io
 */
public final class $$MongoDataRepository extends AbstractMongoRepository implements DataRepository {

    public $$MongoDataRepository(final MongoDatabase mongoDatabase) {
        super(DataRepository.class, mongoDatabase.getCollection("account"));
    }

    @Override
    public Mono<Boolean> deleteById(final Long id) {
        final Document filter = new Document("_id", id);
        final Publisher<DeleteResult> result = collection.deleteMany(filter);
        return Mono.from(result)
                .map(r -> r.getDeletedCount() == 1);
    }

    @Override
    public Mono<Long> deleteByRole(final Role role) {
        // filter = "{role: ?}
        final Document filter = new Document("role", role);
        final Publisher<DeleteResult> result = collection.deleteMany(filter);
        return Mono.from(result)
                .map(r -> r.getDeletedCount());
    }
}
