package io.rxmicro.examples.data.mongo.partial.implementation;

import com.mongodb.reactivestreams.client.MongoDatabase;
import io.rxmicro.data.detail.adapter.PublisherToRequiredMonoFutureAdapter;
import org.reactivestreams.Publisher;

import java.util.concurrent.CompletableFuture;

/**
 * Generated by rxmicro annotation processor
 */
public final class $$MongoDataRepository extends AbstractDataRepository implements DataRepository {

    public $$MongoDataRepository(final MongoDatabase mongoDatabase) {
        super(DataRepository.class, mongoDatabase.getCollection("account"));
    }

    @Override
    public CompletableFuture<Long> generatedMethod() {
        final Publisher<Long> result = collection
                .countDocuments();
        return new PublisherToRequiredMonoFutureAdapter<>(
                result,
                useOptionalExceptionSupplier(CompletableFuture.class, Long.class)
        );
    }
}
